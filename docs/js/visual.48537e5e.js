(function(e){function t(t){for(var o,s,a=t[0],c=t[1],u=t[2],f=0,v=[];f<a.length;f++)s=a[f],i[s]&&v.push(i[s][0]),i[s]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);l&&l(t);while(v.length)v.shift()();return r.push.apply(r,u||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],o=!0,a=1;a<n.length;a++){var c=n[a];0!==i[c]&&(o=!1)}o&&(r.splice(t--,1),e=s(s.s=n[0]))}return e}var o={},i={2:0},r=[];function s(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=o,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(n,o,function(t){return e[t]}.bind(null,o));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/layered-vj/";var a=window["webpackJsonp"]=window["webpackJsonp"]||[],c=a.push.bind(a);a.push=t,a=a.slice();for(var u=0;u<a.length;u++)t(a[u]);var l=c;r.push([5,0]),n()})({0:function(e,t){},"0lXn":function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nvarying vec2      vUv;\n\nconst float binalizationThreshold = 0.3;\n\nvoid main(){\n  vec4 video = texture2D(texture, vUv);\n\n  float average = (video.r + video.g + video.b) / 3.;\n  vec3 mono = vec3(average);\n  vec3 binary = vec3(step(binalizationThreshold, average));\n\n  gl_FragColor = vec4(binary, 1.);\n}\n"},"2ZPM":function(e,t){e.exports="/**!\n * @author alteredq / http://alteredqualia.com/\n *\n * Dot screen shader\n * based on glfx.js sepia shader\n * https://github.com/evanw/glfx.js\n */\nprecision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nvarying vec2      vUv;\n\nconst vec2 center = vec2(0.5);\nconst float angle = 1.57;\nconst float scale = 1.;\nconst vec2 tSize = vec2(256.);\n\nfloat pattern() {\n\n  float s = sin( angle ), c = cos( angle );\n\n  vec2 tex = vUv * tSize - center;\n  vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\n\n  return ( sin( point.x ) * sin( point.y ) ) * 4.0;\n\n}\n\nvoid main() {\n\n  vec4 color = texture2D( texture, vUv );\n\n  float average = ( color.r + color.g + color.b ) / 3.0;\n\n  gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n\n}\n"},"3F1K":function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\nuniform sampler2D videoTexture;\nuniform sampler2D logoTexture;\nuniform sampler2D logo2Texture;\nuniform sampler2D faceTexture;\nuniform float     bgColor;\nuniform float     mode;\nuniform float     pointShape;\nuniform float     animation;\nuniform float prevDeformation;\nuniform float nextDeformation;\nuniform float deformationProgress;\nvarying vec2 vTexCoord;\nvarying vec4 vPosition;\n\nfloat lengthN(vec2 v, float n) {\n  vec2 tmp = pow(abs(v), vec2(n));\n  return pow(tmp.x + tmp.y, 1. / n);\n}\n\nvoid main(){\n  vec4 video = texture2D(videoTexture, vTexCoord);\n  float rate = max(vPosition.z / vPosition.w, 0.);\n\n  vec2 pointCoord = gl_PointCoord.st * 2. - 1.;\n  float circle = smoothstep(0.9, 1., length(pointCoord));\n  float star = smoothstep(0.9, 1., lengthN(pointCoord, 0.5));\n  float shape = 1. - (\n    (pointShape == 2.) ? star :\n    (pointShape == 1.) ? circle :\n    0.);\n  vec4 shapeColor = vec4(vec3(1.), (mode == 0.) ? shape : 1.);\n  vec4 thumbColor = texture2D(videoTexture, vec2(gl_PointCoord.s, 1. - gl_PointCoord.t));\n  vec4 particleColor = (pointShape == 3.) ? thumbColor : shapeColor;\n\n  float minCurrentColor = (bgColor == 1.) ? 0.4 : (animation == 1.) ? 0.3 : 0.2;\n  float maxCurrentColor = (bgColor == 1.) ? 0.95 : 0.95;\n  vec4 currentColor = mix(vec4(minCurrentColor), vec4(maxCurrentColor), video);\n  vec4 videoColor = vec4(currentColor.rgb, sqrt(rate)) * particleColor;\n\n  vec2 imageTexCoord = vec2(vTexCoord.x, 1. - vTexCoord.y);\n  vec4 logoColor = texture2D(logoTexture, imageTexCoord);\n  vec4 logo2Color = texture2D(logo2Texture, imageTexCoord);\n  vec4 faceColor = texture2D(faceTexture, imageTexCoord);\n\n  gl_FragColor = mix(\n    (prevDeformation == 4.) ? logo2Color :\n    (prevDeformation == 3.) ? faceColor :\n    (prevDeformation == 2.) ? logoColor :\n    videoColor,\n    (nextDeformation == 4.) ? logo2Color :\n    (nextDeformation == 3.) ? faceColor :\n    (nextDeformation == 2.) ? logoColor :\n    videoColor,\n    deformationProgress);\n}\n"},"3H5l":function(e,t,n){"use strict";var o=n("fKsm"),i=n.n(o);i.a},"3R0Y":function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nuniform vec2      resolution;\nuniform float     volume;\nuniform float     custom;\nvarying vec2      vUv;\n\nhighp float random_1_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\n\nconst float dx = 0.001953125;\nconst float dy = 0.001953125;\nconst float binalizationThreshold = 0.7;\nconst float minColor = 0.5;\n\nfloat peek(const in float x, const in float y) {\n  return texture2D(texture, vec2(x, y)).r;\n}\n\nvoid main(){\n  float noise = (random_1_0(vec2(vUv)) * 2. - 1.) * 0.001;\n  vec2 uv = vUv + noise;\n\n  vec4 video = texture2D(texture, uv);\n\n  float x = uv.x;\n  float y = uv.y;\n  mat3 m = mat3(\n    peek(x - dx, y - dy), peek(x, y - dy), peek(x + dx, y - dy),\n    peek(x - dx, y     ), peek(x, y     ), peek(x + dx, y     ),\n    peek(x - dx, y + dy), peek(x, y + dy), peek(x + dx, y + dy)\n  );\n  vec2 h = vec2(\n    m[0][0] - m[0][2] + (m[1][0] - m[1][2]) * 2.0 + m[2][0] - m[2][2],\n    m[0][0] - m[2][0] + (m[0][1] - m[2][1]) * 2.0 + m[0][2] - m[2][2]\n  );\n  float d = 1.0 - length(h);\n  d = step(custom, d); // binalization\n\n  gl_FragColor = mix(vec4(minColor), vec4(1.), video) * vec4(vec3(d), 1.0);\n}\n"},5:function(e,t,n){e.exports=n("RBua")},"6eCo":function(e,t,n){var o={"./binary.frag":"0lXn","./dot.frag":"ySYr","./dotScreen.frag":"2ZPM","./flash.frag":"H7wK","./glitch.frag":"ZTj8","./none.frag":"KRDN","./rock.frag":"gJVG","./shake.frag":"Q3YR","./toon.frag":"3R0Y","./water.frag":"vphU","./ykobGlitch.frag":"BBVI"};function i(e){var t=r(e);return n(t)}function r(e){var t=o[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}i.keys=function(){return Object.keys(o)},i.resolve=r,e.exports=i,i.id="6eCo"},"9/lF":function(e,t,n){"use strict";var o=n("wq1n"),i=n.n(o);i.a},"9hJY":function(e,t,n){},AZFO:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D prevVelocityTexture;\nuniform sampler2D pictureTexture;\nuniform vec2      resolution;\nuniform float     animation;\nuniform float     isAccel;\nuniform float     isRotation;\n\nconst float normalSpeed = -0.0004;\nconst float warpSpeed = 0.012;\nconst float accelWarpSpeed = 0.05;\nconst float rotationSpeed = -0.08;\n\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  vec4 prevVelocity = texture2D(prevVelocityTexture, coord);\n  vec4 picture = texture2D(pictureTexture, coord);\n\n  float radian = mix(0., prevVelocity.x + rotationSpeed, animation) * isRotation;\n  vec2 velocityXY = vec2(mix(radian, 0., picture.w));\n\n  float speed = mix(prevVelocity.z + normalSpeed, prevVelocity.z * 0.2 + warpSpeed + (accelWarpSpeed - warpSpeed) * isAccel, animation);\n  float velocityZ = mix(speed, 0., picture.w);\n\n  gl_FragColor = vec4(velocityXY, velocityZ, 0.);\n}\n"},AqNN:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D particleTexture;\nuniform sampler2D postTexture;\nuniform vec2      resolution;\nuniform vec2      pointResolution;\nuniform float videoAlpha;\nuniform float particleAlpha;\nuniform float animation;\nvarying vec2 vUv;\n\nvec2 adjustRatio_1_0(vec2 coord, vec2 inputResolution, vec2 outputResolution) {\n  vec2 ratio = vec2(\n    min((outputResolution.x / outputResolution.y) / (inputResolution.x / inputResolution.y), 1.0),\n    min((outputResolution.y / outputResolution.x) / (inputResolution.y / inputResolution.x), 1.0)\n  );\n  return vec2(\n    coord.x * ratio.x + (1.0 - ratio.x) * 0.5,\n    coord.y * ratio.y + (1.0 - ratio.y) * 0.5\n  );\n}\n\n\n\n\nvoid main(){\n  vec2 particleUv = mix(vUv, adjustRatio_1_0(vUv, resolution, pointResolution), step(animation, 1.));\n\n  vec4 post = texture2D(postTexture, vUv);\n  vec4 particle = texture2D(particleTexture, particleUv);\n\n  gl_FragColor = post * videoAlpha * (1. - particle.w * particleAlpha) + particle * particle.w * particleAlpha;\n}\n"},BBVI:function(e,t){e.exports="/**!\n * created by yoichi kobayashi\n * https://ykob.github.io/sketch-threejs/sketch/glitch.html\n */\nprecision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nuniform vec2      resolution;\nvarying vec2      vUv;\n\nhighp float random_2_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_1(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289_1_1(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_2(vec4 x) {\n     return mod289_1_1(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_3(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise_1_4(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D_1_5 = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g_1_6 = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g_1_6;\n  vec3 i1 = min( g_1_6.xyz, l.zxy );\n  vec3 i2 = max( g_1_6.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D_1_5.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289_1_1(i);\n  vec4 p = permute_1_2( permute_1_2( permute_1_2(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D_1_5.wyz - D_1_5.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1_1_7 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0_1_8 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1_1_7.xy,h.z);\n  vec3 p3 = vec3(a1_1_7.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt_1_3(vec4(dot(p0_1_8,p0_1_8), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0_1_8 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0_1_8,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\n\n\n\nconst float interval = 3.0;\n\nvoid main(void){\n  float strength = smoothstep(interval * 0.5, interval, interval - mod(time, interval));\n  vec2 shake = vec2(strength * 8.0 + 0.5) * vec2(\n    random_2_0(vec2(time)) * 2.0 - 1.0,\n    random_2_0(vec2(time * 2.0)) * 2.0 - 1.0\n  ) / resolution;\n\n  float y = vUv.y * resolution.y;\n  float rgbWave = (\n      snoise_1_4(vec3(0.0, y * 0.01, time * 400.0)) * (2.0 + strength * 32.0)\n      * snoise_1_4(vec3(0.0, y * 0.02, time * 200.0)) * (1.0 + strength * 4.0)\n      + step(0.9995, sin(y * 0.005 + time * 1.6)) * 12.0\n      + step(0.9999, sin(y * 0.005 + time * 2.0)) * -18.0\n    ) / resolution.x;\n  float rgbDiff = (6.0 + sin(time * 500.0 + vUv.y * 40.0) * (20.0 * strength + 1.0)) / resolution.x;\n  float rgbUvX = vUv.x + rgbWave;\n  float r = texture2D(texture, vec2(rgbUvX + rgbDiff, vUv.y) + shake).r;\n  float g = texture2D(texture, vec2(rgbUvX, vUv.y) + shake).g;\n  float b = texture2D(texture, vec2(rgbUvX - rgbDiff, vUv.y) + shake).b;\n\n  float whiteNoise = (random_2_0(vUv + mod(time, 10.0)) * 2.0 - 1.0) * (0.15 + strength * 0.15);\n\n  float bnTime = floor(time * 20.0) * 200.0;\n  float noiseX = step((snoise_1_4(vec3(0.0, vUv.x * 3.0, bnTime)) + 1.0) / 2.0, 0.12 + strength * 0.3);\n  float noiseY = step((snoise_1_4(vec3(0.0, vUv.y * 3.0, bnTime)) + 1.0) / 2.0, 0.12 + strength * 0.3);\n  float bnMask = noiseX * noiseY;\n  float bnUvX = vUv.x + sin(bnTime) * 0.2 + rgbWave;\n  float bnR = texture2D(texture, vec2(bnUvX + rgbDiff, vUv.y)).r * bnMask;\n  float bnG = texture2D(texture, vec2(bnUvX, vUv.y)).g * bnMask;\n  float bnB = texture2D(texture, vec2(bnUvX - rgbDiff, vUv.y)).b * bnMask;\n  vec4 blockNoise = vec4(bnR, bnG, bnB, 1.0);\n\n  float bnTime2 = floor(time * 25.0) * 300.0;\n  float noiseX2 = step((snoise_1_4(vec3(0.0, vUv.x * 2.0, bnTime2)) + 1.0) / 2.0, 0.12 + strength * 0.5);\n  float noiseY2 = step((snoise_1_4(vec3(0.0, vUv.y * 8.0, bnTime2)) + 1.0) / 2.0, 0.12 + strength * 0.3);\n  float bnMask2 = noiseX2 * noiseY2;\n  float bnR2 = texture2D(texture, vec2(bnUvX + rgbDiff, vUv.y)).r * bnMask2;\n  float bnG2 = texture2D(texture, vec2(bnUvX, vUv.y)).g * bnMask2;\n  float bnB2 = texture2D(texture, vec2(bnUvX - rgbDiff, vUv.y)).b * bnMask2;\n  vec4 blockNoise2 = vec4(bnR2, bnG2, bnB2, 1.0);\n\n  float waveNoise = (sin(vUv.y * 1200.0) + 1.0) / 2.0 * (0.15 + strength * 0.2);\n\n  gl_FragColor = vec4(r, g, b, 1.0) * (1.0 - bnMask - bnMask2) + (whiteNoise + blockNoise + blockNoise2 - waveNoise);\n}\n"},GsoI:function(e,t){e.exports="#define GLSLIFY 1\nattribute vec3 position;\nvarying   vec2 vUv;\n\nvoid main(){\n  gl_Position = vec4(position, 1.0);\n  vUv = (position.xy + 1.0) * 0.5;\n}\n"},H7wK:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nuniform vec2      resolution;\nuniform float     volume;\nuniform float     custom;\nuniform float     customSwitch;\nvarying vec2      vUv;\n\nhighp float random_2_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\nvec3 hsv_1_1(float h, float s, float v) {\n  vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n  return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\n\n\n\nconst float PI = 3.1415926;\nconst float PI2 = PI * 2.0;\nconst float interval = 4.8;\nconst float count = 8.;\n\nvoid main(){\n  vec4 video = texture2D(texture, vUv);\n\n  float stepTime = floor(mod(time, interval) / interval * count) / count;\n  vec3 offRgb = hsv_1_1(stepTime * PI2, 0.7, 1.);\n  vec4 offColor = vec4(offRgb, 1.);\n\n  float rnd = random_2_0(vec2(time));\n  float mixedRnd = mix(0.7, 1., rnd);\n  vec3 onRgb = hsv_1_1(rnd * PI2, mixedRnd, mixedRnd);\n  onRgb = mix(vec3(0.7), vec3(1.), onRgb);\n  vec4 onColor = vec4(onRgb, mix(0.4, 1.2, rnd));\n\n  gl_FragColor = video * mix(offColor, onColor, customSwitch);\n}\n"},KRDN:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nvarying vec2      vUv;\n\nvoid main(){\n  gl_FragColor = texture2D(texture, vUv);\n}\n"},NOxk:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D prevPositionTexture;\nuniform sampler2D velocityTexture;\nuniform sampler2D pictureTexture;\nuniform vec2      resolution;\nuniform float     animation;\n\nconst float PI   = 3.1415926;\nconst float PI2  = PI * 2.;\nconst float maxZ = 0.8;\nconst float minZ = 0.5;\nconst float limitMin = -5.;\nconst float limitMax = 5.;\n\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  vec4 prevPosition = texture2D(prevPositionTexture, coord);\n  vec4 velocity = texture2D(velocityTexture, coord);\n  vec4 picture = texture2D(pictureTexture, coord);\n\n  float color = length(picture.rgb);\n  float startZ = color * (maxZ - minZ) + minZ;\n  float z = mix(prevPosition.z + velocity.z, startZ, picture.w);\n\n  vec2 startXY = coord * 2. - 1.;\n  float radian = atan(startXY.y, startXY.x) + velocity.x;\n  float radius = length(mix(startXY, prevPosition.xy, animation)) + z * 0.01;\n  vec2 xy = mix(vec2(cos(radian) * radius, sin(radian) * radius), startXY, picture.w);\n\n  gl_FragColor = vec4(clamp(vec3(xy, z), limitMin, limitMax), mix(prevPosition.w, startZ, picture.w));\n}\n"},PxE0:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D videoTexture;\nuniform sampler2D prevVideoTexture;\nuniform sampler2D prevPictureTexture;\nuniform vec2      resolution;\nconst float threshold = 0.1;\nconst float fadeoutSpeed = 0.04;\nconst float attenuationRate = 1. - fadeoutSpeed;\n\nfloat getDiff(vec2 coord) {\n  vec4 video = texture2D(videoTexture, coord);\n  vec4 prevVideo = texture2D(prevVideoTexture, coord);\n  return abs(length(video.rgb) - length(prevVideo.rgb)) / 1.732;\n}\n\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  vec4 video = texture2D(videoTexture, coord);\n  vec4 prevVideo = texture2D(prevVideoTexture, coord);\n  vec4 prevPicture = texture2D(prevPictureTexture, coord);\n\n  float diff = getDiff(coord);\n\n  float aroundDiff = 0.;\n\n  aroundDiff += getDiff(coord + vec2(-1., 0.));\n  aroundDiff += getDiff(coord + vec2(0., 1.));\n  aroundDiff += getDiff(coord + vec2(1., 0.));\n  aroundDiff += getDiff(coord + vec2(0., -1.));\n\n  aroundDiff += getDiff(coord + vec2(-2., 0.));\n  aroundDiff += getDiff(coord + vec2(-1., 1.));\n  aroundDiff += getDiff(coord + vec2(0., 2.));\n  aroundDiff += getDiff(coord + vec2(1., 1.));\n  aroundDiff += getDiff(coord + vec2(2., 0.));\n  aroundDiff += getDiff(coord + vec2(1., -1.));\n  aroundDiff += getDiff(coord + vec2(0., -2.));\n  aroundDiff += getDiff(coord + vec2(-1., -1.));\n\n  aroundDiff /= 12.;\n\n  vec3 prevColor = prevPicture.rgb * attenuationRate;\n  float isMove = step(threshold, (diff + aroundDiff));\n  gl_FragColor = vec4(mix(prevColor, video.rgb, isMove), isMove);\n}\n"},Q3YR:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nuniform vec2      resolution;\nuniform float     volume;\nuniform float     custom;\nuniform float     customSwitch;\nvarying vec2      vUv;\n\nhighp float random_2_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\nvec3 hsv_1_1(float h, float s, float v) {\n  vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n  return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\n\n\n\nconst float PI = 3.1415926;\nconst float PI2 = PI * 2.0;\nconst float interval = 2.;\nconst float count = 8.;\nconst float shakeRate = 0.36;\n\nvoid main(){\n  float stepTime = floor(mod(time, interval) / interval * count) / count;\n\n  vec4 video = texture2D(texture, vUv);\n  float noise = stepTime;\n  float rndX = random_2_0(vec2(noise, 0.));\n  float rndY = random_2_0(vec2(0., noise));\n  vec4 shakeVideo = texture2D(texture, vUv + (vec2(rndX, rndY) * 2. - 1.) * (customSwitch == 1. ? 0.05 : 0.005));\n\n  gl_FragColor = video * (1. - shakeRate) + shakeVideo * shakeRate;\n}\n"},RBua:function(e,t,n){"use strict";n.r(t);n("yt8O"),n("VRzm");var o=n("Kw5r"),i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"view"})},r=[],s=(n("rGqo"),n("xmWZ")),a=n("qpph"),c=function(){function e(){Object(s["a"])(this,e),this.hasControl()&&(this.controlIpc=window.opener.ipc)}return Object(a["a"])(e,[{key:"hasControl",value:function(){return!(!window.opener||window.opener.closed)||(alert("The control window does not exist."),!1)}},{key:"on",value:function(e,t){this.hasControl()&&this.controlIpc.on(e,t)}},{key:"send",value:function(e){var t;if(this.hasControl()){for(var n=arguments.length,o=new Array(n>1?n-1:0),i=1;i<n;i++)o[i-1]=arguments[i];(t=this.controlIpc).emit.apply(t,[e].concat(o))}}}]),e}();window.ipc=new c;var u=window.ipc,l=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.isShow?n("div",{staticClass:"visual",style:{"z-index":e.order,opacity:e.visual.opacity}},[n(e.visual.type,{tag:"component",staticClass:"visual-content",attrs:{visual:e.visual}}),e.visual.copyright?n("p",{staticClass:"visual-copyright"},[e._v("© "+e._s(e.visual.copyright))]):e._e()],1):e._e()},f=[],v=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("iframe",{attrs:{src:e.visual.url,frameborder:"0",allowfullscreen:""}})},p=[],m={props:["visual"]},d=m,h=(n("nH8L"),n("KHd+")),x=Object(h["a"])(d,v,p,!1,null,"780eb514",null),y=x.exports,g=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("video",{attrs:{src:e.visual.url,autoplay:"",loop:"",muted:""},domProps:{muted:!0}})},b=[],w={props:["visual"],mounted:function(){this.visual.playbackRate&&(this.$el.playbackRate=this.visual.playbackRate)}},T=w,_=(n("9/lF"),Object(h["a"])(T,g,b,!1,null,"50cc1a26",null)),E=_.exports,U=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("canvas")},R=[],D=(n("ls82"),n("MECJ")),P=(n("RW0V"),n("rE2o"),n("ioFf"),n("t7pz"));n("Y9lz");function S(){this.create=function(){return new Float32Array(16)},this.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},this.multiply=function(e,t,n){var o=e[0],i=e[1],r=e[2],s=e[3],a=e[4],c=e[5],u=e[6],l=e[7],f=e[8],v=e[9],p=e[10],m=e[11],d=e[12],h=e[13],x=e[14],y=e[15],g=t[0],b=t[1],w=t[2],T=t[3],_=t[4],E=t[5],U=t[6],R=t[7],D=t[8],P=t[9],S=t[10],M=t[11],C=t[12],A=t[13],F=t[14],z=t[15];return n[0]=g*o+b*a+w*f+T*d,n[1]=g*i+b*c+w*v+T*h,n[2]=g*r+b*u+w*p+T*x,n[3]=g*s+b*l+w*m+T*y,n[4]=_*o+E*a+U*f+R*d,n[5]=_*i+E*c+U*v+R*h,n[6]=_*r+E*u+U*p+R*x,n[7]=_*s+E*l+U*m+R*y,n[8]=D*o+P*a+S*f+M*d,n[9]=D*i+P*c+S*v+M*h,n[10]=D*r+P*u+S*p+M*x,n[11]=D*s+P*l+S*m+M*y,n[12]=C*o+A*a+F*f+z*d,n[13]=C*i+A*c+F*v+z*h,n[14]=C*r+A*u+F*p+z*x,n[15]=C*s+A*l+F*m+z*y,n},this.scale=function(e,t,n){return n[0]=e[0]*t[0],n[1]=e[1]*t[0],n[2]=e[2]*t[0],n[3]=e[3]*t[0],n[4]=e[4]*t[1],n[5]=e[5]*t[1],n[6]=e[6]*t[1],n[7]=e[7]*t[1],n[8]=e[8]*t[2],n[9]=e[9]*t[2],n[10]=e[10]*t[2],n[11]=e[11]*t[2],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n},this.translate=function(e,t,n){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12],n[13]=e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13],n[14]=e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14],n[15]=e[3]*t[0]+e[7]*t[1]+e[11]*t[2]+e[15],n},this.rotate=function(e,t,n,o){var i=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);if(!i)return null;var r=n[0],s=n[1],a=n[2];1!=i&&(i=1/i,r*=i,s*=i,a*=i);var c=Math.sin(t),u=Math.cos(t),l=1-u,f=e[0],v=e[1],p=e[2],m=e[3],d=e[4],h=e[5],x=e[6],y=e[7],g=e[8],b=e[9],w=e[10],T=e[11],_=r*r*l+u,E=s*r*l+a*c,U=a*r*l-s*c,R=r*s*l-a*c,D=s*s*l+u,P=a*s*l+r*c,S=r*a*l+s*c,M=s*a*l-r*c,C=a*a*l+u;return t?e!=o&&(o[12]=e[12],o[13]=e[13],o[14]=e[14],o[15]=e[15]):o=e,o[0]=f*_+d*E+g*U,o[1]=v*_+h*E+b*U,o[2]=p*_+x*E+w*U,o[3]=m*_+y*E+T*U,o[4]=f*R+d*D+g*P,o[5]=v*R+h*D+b*P,o[6]=p*R+x*D+w*P,o[7]=m*R+y*D+T*P,o[8]=f*S+d*M+g*C,o[9]=v*S+h*M+b*C,o[10]=p*S+x*M+w*C,o[11]=m*S+y*M+T*C,o},this.lookAt=function(e,t,n,o){var i,r,s,a,c,u,l,f,v,p,m=e[0],d=e[1],h=e[2],x=n[0],y=n[1],g=n[2],b=t[0],w=t[1],T=t[2];return m==b&&d==w&&h==T?this.identity(o):(l=m-t[0],f=d-t[1],v=h-t[2],p=1/Math.sqrt(l*l+f*f+v*v),l*=p,f*=p,v*=p,i=y*v-g*f,r=g*l-x*v,s=x*f-y*l,p=Math.sqrt(i*i+r*r+s*s),p?(p=1/p,i*=p,r*=p,s*=p):(i=0,r=0,s=0),a=f*s-v*r,c=v*i-l*s,u=l*r-f*i,p=Math.sqrt(a*a+c*c+u*u),p?(p=1/p,a*=p,c*=p,u*=p):(a=0,c=0,u=0),o[0]=i,o[1]=a,o[2]=l,o[3]=0,o[4]=r,o[5]=c,o[6]=f,o[7]=0,o[8]=s,o[9]=u,o[10]=v,o[11]=0,o[12]=-(i*m+r*d+s*h),o[13]=-(a*m+c*d+u*h),o[14]=-(l*m+f*d+v*h),o[15]=1,o)},this.perspective=function(e,t,n,o,i){var r=n*Math.tan(e*Math.PI/360),s=r*t,a=2*s,c=2*r,u=o-n;return i[0]=2*n/a,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2*n/c,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=-(o+n)/u,i[11]=-1,i[12]=0,i[13]=0,i[14]=-o*n*2/u,i[15]=0,i},this.ortho=function(e,t,n,o,i,r,s){var a=t-e,c=n-o,u=r-i;return s[0]=2/a,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=2/c,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[10]=-2/u,s[11]=0,s[12]=-(e+t)/a,s[13]=-(n+o)/c,s[14]=-(r+i)/u,s[15]=1,s},this.transpose=function(e,t){return t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15],t},this.inverse=function(e,t){var n=e[0],o=e[1],i=e[2],r=e[3],s=e[4],a=e[5],c=e[6],u=e[7],l=e[8],f=e[9],v=e[10],p=e[11],m=e[12],d=e[13],h=e[14],x=e[15],y=n*a-o*s,g=n*c-i*s,b=n*u-r*s,w=o*c-i*a,T=o*u-r*a,_=i*u-r*c,E=l*d-f*m,U=l*h-v*m,R=l*x-p*m,D=f*h-v*d,P=f*x-p*d,S=v*x-p*h,M=1/(y*S-g*P+b*D+w*R-T*U+_*E);return t[0]=(a*S-c*P+u*D)*M,t[1]=(-o*S+i*P-r*D)*M,t[2]=(d*_-h*T+x*w)*M,t[3]=(-f*_+v*T-p*w)*M,t[4]=(-s*S+c*R-u*U)*M,t[5]=(n*S-i*R+r*U)*M,t[6]=(-m*_+h*b-x*g)*M,t[7]=(l*_-v*b+p*g)*M,t[8]=(s*P-a*R+u*E)*M,t[9]=(-n*P+o*R-r*E)*M,t[10]=(m*T-d*b+x*y)*M,t[11]=(-l*T+f*b-p*y)*M,t[12]=(-s*D+a*U-c*E)*M,t[13]=(n*D-o*U+i*E)*M,t[14]=(-m*w+d*g-h*y)*M,t[15]=(l*w-f*g+v*y)*M,t}}n("Faw5"),n("f3/d");var M,C,A=0;function F(e){return M=e,C=M.getContext("webgl"),{canvas:M,gl:C}}function z(e,t){var n=C.createShader("vertex"===t?C.VERTEX_SHADER:"fragment"===t?C.FRAGMENT_SHADER:null);if(C.shaderSource(n,e),C.compileShader(n),C.getShaderParameter(n,C.COMPILE_STATUS))return n;alert(C.getShaderInfoLog(n))}var k=function(){function e(t,n){Object(s["a"])(this,e);var o=C.createProgram();C.attachShader(o,t),C.attachShader(o,n),C.linkProgram(o),C.getProgramParameter(o,C.LINK_STATUS)?(C.useProgram(o),this.program=o,this.attributes={},this.uniforms={}):alert(C.getProgramInfoLog(o))}return Object(a["a"])(e,[{key:"createAttribute",value:function(e){var t=this;Object.keys(e).forEach(function(n){var o=e[n],i=o.stride,r=o.vbo,s=o.ibo;t.attributes[n]={location:C.getAttribLocation(t.program,n),stride:i,vbo:r,ibo:s},t.setAttribute(n)})}},{key:"setAttribute",value:function(e,t){var n=this.attributes[e],o=n.vbo,i=n.location,r=n.stride,s=n.ibo;C.bindBuffer(C.ARRAY_BUFFER,t||o),C.enableVertexAttribArray(i),C.vertexAttribPointer(i,r,C.FLOAT,!1,0,0),void 0!==s&&C.bindBuffer(C.ELEMENT_ARRAY_BUFFER,s)}},{key:"createUniform",value:function(e){var t=this;Object.keys(e).forEach(function(n){var o=e[n];t.uniforms[n]={location:C.getUniformLocation(t.program,n),type:"uniform".concat(o.type)},void 0!==o.value&&t.setUniform(n,o.value)})}},{key:"setUniform",value:function(e,t){var n=this.uniforms[e];n&&(/^uniformMatrix/.test(n.type)?C[n.type](n.location,!1,t):C[n.type](n.location,t))}}]),e}();function I(e){var t=C.createBuffer();return C.bindBuffer(C.ARRAY_BUFFER,t),C.bufferData(C.ARRAY_BUFFER,new Float32Array(e),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),t}function L(e){var t=C.createBuffer();return C.bindBuffer(C.ELEMENT_ARRAY_BUFFER,t),C.bufferData(C.ELEMENT_ARRAY_BUFFER,new Int16Array(e),C.STATIC_DRAW),C.bindBuffer(C.ELEMENT_ARRAY_BUFFER,null),t}function N(e){return O.apply(this,arguments)}function O(){return O=Object(D["a"])(regeneratorRuntime.mark(function e(t){var n,o;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:if("string"!==typeof t){e.next=4;break}return e.next=3,W(t);case 3:t=e.sent;case 4:return n=C.createTexture(),o=A++,C.activeTexture(C["TEXTURE".concat(o)]),C.bindTexture(C.TEXTURE_2D,n),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_MIN_FILTER,C.LINEAR),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_MAG_FILTER,C.LINEAR),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_WRAP_S,C.CLAMP_TO_EDGE),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_WRAP_T,C.CLAMP_TO_EDGE),C.texImage2D(C.TEXTURE_2D,0,C.RGBA,C.RGBA,C.UNSIGNED_BYTE,t),e.abrupt("return",{index:o});case 14:case"end":return e.stop()}},e,this)})),O.apply(this,arguments)}function G(e,t){var n=C.createFramebuffer();C.bindFramebuffer(C.FRAMEBUFFER,n);var o=C.createRenderbuffer();C.bindRenderbuffer(C.RENDERBUFFER,o),C.renderbufferStorage(C.RENDERBUFFER,C.DEPTH_COMPONENT16,e,t),C.framebufferRenderbuffer(C.FRAMEBUFFER,C.DEPTH_ATTACHMENT,C.RENDERBUFFER,o);var i=C.createTexture(),r=A++;return C.activeTexture(C["TEXTURE".concat(r)]),C.bindTexture(C.TEXTURE_2D,i),C.texImage2D(C.TEXTURE_2D,0,C.RGBA,e,t,0,C.RGBA,C.UNSIGNED_BYTE,null),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_MAG_FILTER,C.LINEAR),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_MIN_FILTER,C.LINEAR),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_WRAP_S,C.CLAMP_TO_EDGE),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_WRAP_T,C.CLAMP_TO_EDGE),C.framebufferTexture2D(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,i,0),C.bindRenderbuffer(C.RENDERBUFFER,null),C.bindFramebuffer(C.FRAMEBUFFER,null),{framebuffer:n,index:r}}function B(e,t,n){if(null!=e&&(null!=e.textureFloat||null!=e.textureHalfFloat)){var o=null!=e.textureFloat?C.FLOAT:e.textureHalfFloat.HALF_FLOAT_OES,i=C.createFramebuffer();C.bindFramebuffer(C.FRAMEBUFFER,i);var r=C.createTexture(),s=A++;return C.activeTexture(C["TEXTURE".concat(s)]),C.bindTexture(C.TEXTURE_2D,r),C.texImage2D(C.TEXTURE_2D,0,C.RGBA,t,n,0,C.RGBA,o,null),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_MAG_FILTER,C.NEAREST),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_MIN_FILTER,C.NEAREST),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_WRAP_S,C.CLAMP_TO_EDGE),C.texParameteri(C.TEXTURE_2D,C.TEXTURE_WRAP_T,C.CLAMP_TO_EDGE),C.framebufferTexture2D(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,r,0),C.bindFramebuffer(C.FRAMEBUFFER,null),{framebuffer:i,index:s}}console.error("float texture not support")}function V(){return{elementIndexUint:C.getExtension("OES_element_index_uint"),textureFloat:C.getExtension("OES_texture_float"),textureHalfFloat:C.getExtension("OES_texture_half_float")}}function X(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1?arguments[1]:void 0;C.activeTexture(C["TEXTURE".concat(e)]),C.texImage2D(C.TEXTURE_2D,0,C.RGBA,C.RGBA,C.UNSIGNED_BYTE,t)}function H(e){C.useProgram(e.program)}function j(e){C.bindFramebuffer(C.FRAMEBUFFER,e)}function Y(){var e;(e=C).clearColor.apply(e,arguments)}function W(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.width,o=t.height;return new Promise(function(t){var i=new Image;i.addEventListener("load",function(){t(i)}),i.crossOrigin="anonymous",i.src=e,n&&(i.width=n),o&&(i.height=o)})}function q(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.innerWidth,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window.innerHeight,n=window.innerWidth/window.innerHeight,o=e/t;o>=n?(M.width=window.innerWidth,M.height=window.innerWidth/o):(M.height=window.innerHeight,M.width=window.innerHeight*o),C.viewport(0,0,M.width,M.height)}function Z(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};q(e.width,e.height),window.addEventListener("resize",function(){q(e.width,e.height),e.onResize&&e.onResize()})}function $(e){for(var t=[],n=0;n<1;n+=e)for(var o=n%(2*e)===e,i=0;i<1;i+=e){var r=(o?1:0)+i*(o?-1:1);t.push(r,n,Math.random(),Math.random())}return I(t)}var K=n("oDws"),J=n("pdn3");J["linear"]=function(e,t,n,o){return n*(e/o)+t};var Q,ee,te,ne,oe,ie,re,se,ae,ce,ue,le,fe,ve,pe,me,de,he,xe,ye,ge,be,we,Te,_e,Ee=function(){function e(t,n){Object(s["a"])(this,e);var o=n.property,i=n.from,r=void 0===i?0:i,a=n.to,c=void 0===a?1:a,u=n.duration,l=void 0===u?1e3:u,f=n.easing,v=void 0===f?"linear":f;this.target=t,this.duration=l,this.easing=v,this.property=o||Object.keys(t)[0],this.originalFrom=r||t[o],this.originalTo=c}return Object(a["a"])(e,[{key:"tick",value:function(){var e=this,t=Date.now()-this.startTime;t<this.duration?(this.target[this.property]=J[this.easing](t,this.from,this.to-this.from,this.duration),this.id=requestAnimationFrame(function(){e.tick()})):this.target[this.property]=this.to}},{key:"animate",value:function(){var e=this;this.stop(),this.startTime=Date.now(),this.id=requestAnimationFrame(function(){e.tick()})}},{key:"play",value:function(){this.from=this.originalFrom,this.to=this.originalTo,this.animate()}},{key:"reverse",value:function(){this.from=this.originalTo,this.to=this.originalFrom,this.animate()}},{key:"stop",value:function(){cancelAnimationFrame(this.id)}}]),e}(),Ue=P["k"]/P["a"],Re={},De={},Pe={},Se={},Me=[],Ce=1,Ae=[0,0],Fe={x:0,y:0},ze={x:0,y:0},ke={x:0,y:0,z:5},Ie=0,Le=0,Ne=!1,Oe=0,Ge=1,Be=[0,0,1,1],Ve=7,Xe=0,He=0;function je(e){return Ye.apply(this,arguments)}function Ye(){return Ye=Object(D["a"])(regeneratorRuntime.mark(function e(t){var o,i,r,s,a,c,u,l,f,v,p,m,d,h,x,y,g,b,w,T,_,E,U,R;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:if(Se=t.settings,de=t.media,o=F(t.canvas),Q=o.canvas,ne=o.gl,Z({onResize:function(){ee=Q.width,te=Q.height}}),ee=Q.width,te=Q.height,ie=new S,ue=ie.identity(ie.create()),le=ie.identity(ie.create()),fe=ie.identity(ie.create()),ve=ie.identity(ie.create()),pe=ie.identity(ie.create()),oe=V(),window.addEventListener("keydown",function(e){27===e.keyCode&&(we?Qe():et())}),Q.addEventListener("pointermove",function(e){if(Se.pointer){var t=e.clientX/ee*2-1,n=e.clientY/te*2-1;Fe={x:t,y:-n},clearTimeout(i),Q.classList.add("s-move"),i=setTimeout(function(){Q.classList.remove("s-move")},500)}}),Q.addEventListener("pointerdown",function(e){Se.rotation=1}),Q.addEventListener("pointerup",function(e){Se.rotation=0}),Q.addEventListener("wheel",function(e){Se.zPosition+=.05*e.deltaY,Se.zPosition=Object(K["a"])(Se.zPosition,P["i"],P["g"])}),Q.addEventListener("click",function(e){Se.capture&&(Ne=!0)}),Te=new Ee(Se,{property:"deformationProgress",duration:700,easing:"easeOutExpo"}),r=z(n("ng0g"),"vertex"),s=z(n("qUcY"),"fragment"),De.video=new k(r,s),De.video){e.next=27;break}return e.abrupt("return");case 27:a=z(n("gWk7"),"vertex"),c=!0,u=!1,l=void 0,e.prev=31,f=P["m"][Symbol.iterator]();case 33:if(c=(v=f.next()).done){e.next=42;break}if(p=v.value,m=z(n("6eCo")("./".concat(p,".frag")),"fragment"),Pe[p]=new k(a,m),Pe[p]){e.next=39;break}return e.abrupt("return");case 39:c=!0,e.next=33;break;case 42:e.next=48;break;case 44:e.prev=44,e.t0=e["catch"](31),u=!0,l=e.t0;case 48:e.prev=48,e.prev=49,c||null==f.return||f.return();case 51:if(e.prev=51,!u){e.next=54;break}throw l;case 54:return e.finish(51);case 55:return e.finish(48);case 56:if(d=z(n("PxE0"),"fragment"),De.picture=new k(r,d),De.picture){e.next=60;break}return e.abrupt("return");case 60:if(h=z(n("RHrd"),"fragment"),De.reset=new k(r,h),De.reset){e.next=64;break}return e.abrupt("return");case 64:if(x=z(n("NOxk"),"fragment"),De.position=new k(r,x),De.position){e.next=68;break}return e.abrupt("return");case 68:if(y=z(n("AZFO"),"fragment"),De.velocity=new k(r,y),De.velocity){e.next=72;break}return e.abrupt("return");case 72:if(g=z(n("dvdD"),"vertex"),b=z(n("3F1K"),"fragment"),De.particleScene=new k(g,b),De.particleScene){e.next=77;break}return e.abrupt("return");case 77:if(w=z(n("yFT2"),"fragment"),De.popVelocity=new k(r,w),De.popVelocity){e.next=81;break}return e.abrupt("return");case 81:if(T=z(n("XQim"),"fragment"),De.popPosition=new k(r,T),De.popPosition){e.next=85;break}return e.abrupt("return");case 85:if(_=z(n("zc4q"),"vertex"),E=z(n("whuo"),"fragment"),De.popScene=new k(_,E),De.popScene){e.next=90;break}return e.abrupt("return");case 90:if(U=z(n("GsoI"),"vertex"),R=z(n("AqNN"),"fragment"),De.scene=new k(U,R),De.scene){e.next=95;break}return e.abrupt("return");case 95:return e.next=97,We();case 97:return e.next=99,Ze();case 99:$e();case 100:case"end":return e.stop()}},e,this,[[31,44,48,56],[49,,51,55]])})),Ye.apply(this,arguments)}function We(){return qe.apply(this,arguments)}function qe(){return qe=Object(D["a"])(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:he=de.currentVideo,Ce=Se.videoZoom,Se.zoomPos=Ae,Re.video=N(he),P["c"].forEach(function(){var e=Object(D["a"])(regeneratorRuntime.mark(function e(t){var n,o;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:if(n=t.key,o=t.src,o){e.next=3;break}return e.abrupt("return");case 3:return e.next=5,N(o);case 5:Re[n]=e.sent;case 6:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}());case 5:case"end":return e.stop()}},e,this)})),qe.apply(this,arguments)}function Ze(){var e=[1,1,0,-1,1,0,1,-1,0,-1,-1,0];re=[0,1,2,2,1,3];var t={position:{stride:3,vbo:I(e),ibo:L(re)}},n=1/P["k"];se=$(n);for(var o=[],i=0;i<1-n;i+=n)for(var r=0;r<1;r+=n)r===1-n?(o.push(r,i,Math.random(),Math.random()),o.push(r,i+n,Math.random(),Math.random())):(o.push(r,i,Math.random(),Math.random()),o.push(r,i+n,Math.random(),Math.random()),o.push(r+n,i+n,Math.random(),Math.random()),o.push(r,i,Math.random(),Math.random()));function s(e){e.createAttribute(t),e.createUniform({resolution:{type:"2fv"},texture:{type:"1i"},time:{type:"1f"},volume:{type:"1f"},isAudio:{type:"1f"},custom:{type:"1f"},customSwitch:{type:"1f"}})}ae=I(o),ce=$(1/P["l"]),be=P["l"]*P["l"],De.video.createAttribute(t),De.video.createUniform({resolution:{type:"2fv"},videoResolution:{type:"2fv"},videoTexture:{type:"1i"},zoom:{type:"1f"},zoomPos:{type:"2fv"},focusCount:{type:"1f"},focusPos1:{type:"4fv"},focusPos2:{type:"4fv"},focusPos3:{type:"4fv"},focusPos4:{type:"4fv"}});var a=!0,c=!1,u=void 0;try{for(var l,f=P["m"][Symbol.iterator]();!(a=(l=f.next()).done);a=!0){var v=l.value;s(Pe[v])}}catch(e){c=!0,u=e}finally{try{a||null==f.return||f.return()}finally{if(c)throw u}}De.picture.createAttribute(t),De.picture.createUniform({resolution:{type:"2fv"},videoTexture:{type:"1i"},prevVideoTexture:{type:"1i"},prevPictureTexture:{type:"1i"}}),De.reset.createAttribute(t),De.reset.createUniform({resolution:{type:"2fv"},videoTexture:{type:"1i"}}),De.velocity.createAttribute(t),De.velocity.createUniform({resolution:{type:"2fv"},prevVelocityTexture:{type:"1i"},pictureTexture:{type:"1i"},animation:{type:"1f"},isAccel:{type:"1f"},isRotation:{type:"1f"}}),De.position.createAttribute(t),De.position.createUniform({resolution:{type:"2fv"},prevPositionTexture:{type:"1i"},velocityTexture:{type:"1i"},pictureTexture:{type:"1i"},animation:{type:"1f"}}),De.particleScene.createAttribute({data:{stride:4,vbo:se}}),De.particleScene.createUniform({mvpMatrix:{type:"Matrix4fv"},pointSize:{type:"1f"},videoTexture:{type:"1i"},positionTexture:{type:"1i"},logoTexture:{type:"1i"},logo2Texture:{type:"1i"},faceTexture:{type:"1i"},bgColor:{type:"1f"},volume:{type:"1f"},isAudio:{type:"1f"},mode:{type:"1f"},pointShape:{type:"1f"},prevDeformation:{type:"1f"},nextDeformation:{type:"1f"},deformationProgress:{type:"1f"},loopCount:{type:"1f"},animation:{type:"1f"}}),De.popVelocity.createAttribute(t),De.popVelocity.createUniform({resolution:{type:"2fv"},prevVelocityTexture:{type:"1i"},pictureTexture:{type:"1i"}}),De.popPosition.createAttribute(t),De.popPosition.createUniform({resolution:{type:"2fv"},prevPositionTexture:{type:"1i"},velocityTexture:{type:"1i"},pictureTexture:{type:"1i"}}),De.popScene.createAttribute({data:{stride:4,vbo:ce}}),De.popScene.createUniform({mvpMatrix:{type:"Matrix4fv"},resolution:{type:"2fv"},pointSize:{type:"1f"},videoTexture:{type:"1i"},positionTexture:{type:"1i"},velocityTexture:{type:"1i"},bgColor:{type:"1f"},volume:{type:"1f"},isAudio:{type:"1f"},time:{type:"1f"}}),De.scene.createAttribute(t),De.scene.createUniform({particleTexture:{type:"1i"},postTexture:{type:"1i"},resolution:{type:"2fv"},pointResolution:{type:"2fv"},videoAlpha:{type:"1f"},particleAlpha:{type:"1f"},animation:{type:"1f"}}),Re.videoBuffer=[];for(var p=0;p<P["b"];p++)Re.videoBuffer.push(G(ee,te));Re.postScene=G(ee,te),Re.postSceneLast=G(ee,te),Re.picture=[];for(var m=0;m<P["d"];m++)Re.picture.push(B(oe,P["k"],P["k"]));Re.velocity=[];for(var d=0;d<P["d"];d++)Re.velocity.push(B(oe,P["k"],P["k"]));Re.position=[];for(var h=0;h<P["b"];h++)Re.position.push(B(oe,P["k"],P["k"]));Re.particleScene=G(ee,te),Re.popVelocity=[];for(var x=0;x<P["d"];x++)Re.popVelocity.push(B(oe,P["l"],P["l"]));Re.popPosition=[];for(var y=0;y<P["d"];y++)Re.popPosition.push(B(oe,P["l"],P["l"]));Re.lastPost=G(ee,te)}function $e(){Object.keys(Se).forEach(function(e){Je(e,Se[e])});var e=Math.min(Me.length,4);ne.viewport(0,0,ee,ee),H(De.video),De.video.setAttribute("position"),De.video.setUniform("resolution",[ee,te]),De.video.setUniform("videoResolution",[he.videoWidth,he.videoHeight]),De.video.setUniform("videoTexture",Re.video.index),De.video.setUniform("zoom",Ce),De.video.setUniform("zoomPos",Ae),De.video.setUniform("focusCount",e),De.video.setUniform("focusPos1",Me[0]||Be),De.video.setUniform("focusPos2",Me[1]||Be),De.video.setUniform("focusPos3",Me[2]||Be),De.video.setUniform("focusPos4",Me[3]||Be);for(var t=0;t<P["b"];++t)j(Re.videoBuffer[t].framebuffer),Y(0,0,0,0),ne.clear(ne.COLOR_BUFFER_BIT),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0);H(De.picture),De.picture.setAttribute("position"),De.picture.setUniform("resolution",[P["k"],P["k"]]),De.picture.setUniform("videoTexture",Re.video.index),ne.viewport(0,0,P["k"],P["k"]);for(var n=0;n<P["d"];++n)j(Re.picture[n].framebuffer),Y(0,0,0,0),ne.clear(ne.COLOR_BUFFER_BIT),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0);H(De.reset),De.reset.setAttribute("position"),De.reset.setUniform("resolution",[P["k"],P["k"]]),De.reset.setUniform("videoTexture",Re.video.index),ne.viewport(0,0,P["k"],P["k"]);for(var o=0;o<P["d"];++o)j(Re.velocity[o].framebuffer),Y(0,0,0,0),ne.clear(ne.COLOR_BUFFER_BIT),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0);for(var i=0;i<P["b"];++i)j(Re.position[i].framebuffer),Y(0,0,0,0),ne.clear(ne.COLOR_BUFFER_BIT),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0);H(De.reset),De.reset.setAttribute("position"),De.reset.setUniform("resolution",[P["l"],P["l"]]),De.reset.setUniform("videoTexture",Re.video.index),ne.viewport(0,0,P["l"],P["l"]);for(var r=0;r<P["d"];++r)j(Re.popVelocity[r].framebuffer),Y(0,0,0,0),ne.clear(ne.COLOR_BUFFER_BIT),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0);for(var s=0;s<P["d"];++s)j(Re.popPosition[s].framebuffer),Y(0,0,0,0),ne.clear(ne.COLOR_BUFFER_BIT),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0);ne.disable(ne.DEPTH_TEST),ne.enable(ne.BLEND),ne.blendFuncSeparate(ne.SRC_ALPHA,ne.ONE,ne.ONE,ne.ONE);var a,c,u,l,f=0;we=!0,ye=se,ge=P["k"]*P["k"],me=function(){a=f%2,c=1-a,u=Le?2:a,l=f/60,e=Math.min(Me.length,4),Ce+=.04*(Se.videoZoom-Ce),Ae.forEach(function(e,t){Ae[t]+=.04*(Se.zoomPos[t]-Ae[t])}),Ge+=.1*(de.getVolume()-Ge),X(Re.video.index,he),ne.disable(ne.BLEND),ne.viewport(0,0,ee,ee),H(De.video),j(Re.videoBuffer[a].framebuffer),De.video.setAttribute("position"),De.video.setUniform("resolution",[ee,te]),De.video.setUniform("videoResolution",[he.videoWidth,he.videoHeight]),De.video.setUniform("videoTexture",Re.video.index),De.video.setUniform("zoom",Ce),De.video.setUniform("zoomPos",Ae),De.video.setUniform("focusCount",e),De.video.setUniform("focusPos1",Me[0]||Be),De.video.setUniform("focusPos2",Me[1]||Be),De.video.setUniform("focusPos3",Me[2]||Be),De.video.setUniform("focusPos4",Me[3]||Be),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),Ne&&(j(Re.videoBuffer[u].framebuffer),De.video.setAttribute("position"),De.video.setUniform("resolution",[ee,te]),De.video.setUniform("videoResolution",[he.videoWidth,he.videoHeight]),De.video.setUniform("videoTexture",Re.video.index),De.video.setUniform("zoom",Ce),De.video.setUniform("zoomPos",Ae),De.video.setUniform("focusCount",e),De.video.setUniform("focusPos1",Me[0]||Be),De.video.setUniform("focusPos2",Me[1]||Be),De.video.setUniform("focusPos3",Me[2]||Be),De.video.setUniform("focusPos4",Me[3]||Be),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0)),H(De.currentPost),j(Re.postScene.framebuffer),ne.clear(ne.COLOR_BUFFER_BIT|ne.DEPTH_BUFFER_BIT),ne.viewport(0,0,ee,te),De.currentPost.setAttribute("position"),De.currentPost.setUniform("resolution",[ee,te]),De.currentPost.setUniform("texture",Re.videoBuffer[u].index),De.currentPost.setUniform("time",l),De.currentPost.setUniform("volume",Ge),De.currentPost.setUniform("isAudio",Oe),De.currentPost.setUniform("custom",Se.custom),De.currentPost.setUniform("customSwitch",Ie),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),H(De.currentPost2),j(Re.postSceneLast.framebuffer),ne.clear(ne.COLOR_BUFFER_BIT|ne.DEPTH_BUFFER_BIT),ne.viewport(0,0,ee,te),De.currentPost2.setAttribute("position"),De.currentPost2.setUniform("resolution",[ee,te]),De.currentPost2.setUniform("texture",Re.postScene.index),De.currentPost2.setUniform("time",l),De.currentPost2.setUniform("volume",Ge),De.currentPost2.setUniform("isAudio",Oe),De.currentPost2.setUniform("custom",Se.custom),De.currentPost2.setUniform("customSwitch",Ie),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),"normal"!==Se.animation&&"warp"!==Se.animation&&"pop"!==Se.animation||(ne.viewport(0,0,P["k"],P["k"]),H(De.picture),j(Re.picture[a].framebuffer),De.picture.setAttribute("position"),De.picture.setUniform("resolution",[P["k"],P["k"]]),De.picture.setUniform("videoTexture",Re.videoBuffer[a].index),De.picture.setUniform("prevVideoTexture",Re.videoBuffer[c].index),De.picture.setUniform("prevPictureTexture",Re.picture[c].index),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),"normal"===Se.animation||"warp"===Se.animation?(H(De.velocity),j(Re.velocity[a].framebuffer),De.velocity.setAttribute("position"),De.velocity.setUniform("resolution",[P["k"],P["k"]]),De.velocity.setUniform("prevVelocityTexture",Re.velocity[c].index),De.velocity.setUniform("pictureTexture",Re.picture[a].index),De.velocity.setUniform("animation",xe),De.velocity.setUniform("isAccel",Se.accel),De.velocity.setUniform("isRotation",Se.rotation),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),H(De.position),j(Re.position[a].framebuffer),De.position.setAttribute("position"),De.position.setUniform("resolution",[P["k"],P["k"]]),De.position.setUniform("prevPositionTexture",Re.position[c].index),De.position.setUniform("velocityTexture",Re.velocity[a].index),De.position.setUniform("pictureTexture",Re.picture[a].index),De.position.setUniform("animation",xe),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),Ne&&(H(De.position),j(Re.position[u].framebuffer),De.position.setAttribute("position"),De.position.setUniform("resolution",[P["k"],P["k"]]),De.position.setUniform("prevPositionTexture",Re.position[c].index),De.position.setUniform("velocityTexture",Re.velocity[a].index),De.position.setUniform("pictureTexture",Re.picture[a].index),De.position.setUniform("animation",xe),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0)),ne.enable(ne.BLEND),H(De.particleScene),j(Re.particleScene.framebuffer),ne.clear(ne.COLOR_BUFFER_BIT|ne.DEPTH_BUFFER_BIT),ne.viewport(0,0,ee,te),ze.x+=.01*(Fe.x-ze.x),ze.y+=.01*(Fe.y-ze.y),Ke(),De.particleScene.setAttribute("data",ye),De.particleScene.setUniform("mvpMatrix",pe),De.particleScene.setUniform("pointSize",Ve),De.particleScene.setUniform("videoTexture",Re.videoBuffer[u].index),De.particleScene.setUniform("positionTexture",Re.position[u].index),P["c"].forEach(function(e){var t=e.key,n=e.src;n&&De.particleScene.setUniform("".concat(t,"Texture"),Re[t].index)}),De.particleScene.setUniform("bgColor",Se.bgColor),De.particleScene.setUniform("volume",Ge),De.particleScene.setUniform("isAudio",Oe),De.particleScene.setUniform("mode",Se.mode),De.particleScene.setUniform("pointShape",Se.pointShape),De.particleScene.setUniform("prevDeformation",Xe),De.particleScene.setUniform("nextDeformation",He),De.particleScene.setUniform("deformationProgress",Se.deformationProgress),De.particleScene.setUniform("loopCount",f),De.particleScene.setUniform("animation",xe),ne.drawArrays(Se.mode,0,ge)):"pop"===Se.animation&&(ne.viewport(0,0,P["l"],P["l"]),H(De.popVelocity),j(Re.popVelocity[a].framebuffer),De.popVelocity.setAttribute("position"),De.popVelocity.setUniform("resolution",[P["l"],P["l"]]),De.popVelocity.setUniform("prevVelocityTexture",Re.popVelocity[c].index),De.popVelocity.setUniform("pictureTexture",Re.picture[a].index),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),H(De.popPosition),j(Re.popPosition[a].framebuffer),De.popPosition.setAttribute("position"),De.popPosition.setUniform("resolution",[P["l"],P["l"]]),De.popPosition.setUniform("prevPositionTexture",Re.popPosition[c].index),De.popPosition.setUniform("velocityTexture",Re.popVelocity[a].index),De.popPosition.setUniform("pictureTexture",Re.picture[a].index),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),ne.enable(ne.BLEND),H(De.popScene),j(Re.particleScene.framebuffer),ne.clear(ne.COLOR_BUFFER_BIT|ne.DEPTH_BUFFER_BIT),ne.viewport(0,0,ee,te),ze.x+=.01*(Fe.x-ze.x),ze.y+=.01*(Fe.y-ze.y),Ke(),De.popScene.setAttribute("data"),De.popScene.setUniform("mvpMatrix",pe),De.popScene.setUniform("resolution",[ee,te]),De.popScene.setUniform("pointSize",Ve),De.popScene.setUniform("videoTexture",Re.videoBuffer[a].index),De.popScene.setUniform("positionTexture",Re.popPosition[a].index),De.popScene.setUniform("velocityTexture",Re.popVelocity[a].index),De.popScene.setUniform("bgColor",Se.bgColor),De.popScene.setUniform("volume",Ge),De.popScene.setUniform("isAudio",Oe),De.popScene.setUniform("time",l),ne.drawArrays(ne.POINTS,0,be))),H(De.scene),j(Re.lastPost.framebuffer),ne.clear(ne.COLOR_BUFFER_BIT|ne.DEPTH_BUFFER_BIT),ne.viewport(0,0,ee,te),De.scene.setAttribute("position"),De.scene.setUniform("particleTexture",Re.particleScene.index),De.scene.setUniform("postTexture",Re.postSceneLast.index),De.scene.setUniform("resolution",[ee,te]),De.scene.setUniform("pointResolution",[P["k"],P["k"]]),De.scene.setUniform("videoAlpha",Se.videoAlpha),De.scene.setUniform("particleAlpha",Se.particleAlpha),De.scene.setUniform("animation",xe),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),ne.enable(ne.BLEND),Y(0,0,0,0),ne.clearDepth(1),H(De.lastPost),j(null),ne.clear(ne.COLOR_BUFFER_BIT|ne.DEPTH_BUFFER_BIT),ne.viewport(0,0,ee,te),De.lastPost.setAttribute("position"),De.lastPost.setUniform("resolution",[ee,te]),De.lastPost.setUniform("texture",Re.lastPost.index),De.lastPost.setUniform("time",l),De.lastPost.setUniform("volume",Ge),De.lastPost.setUniform("isAudio",Oe),De.lastPost.setUniform("custom",Se.custom),De.lastPost.setUniform("customSwitch",Ie),ne.drawElements(ne.TRIANGLES,re.length,ne.UNSIGNED_SHORT,0),ne.flush(),Ne=!1,we&&(++f,requestAnimationFrame(me))},me()}function Ke(){var e="warp"===Se.animation?1.5:.3;ke.x+=.1*(Fe.x*e-ke.x),ke.y+=.1*(Fe.y*e-ke.y),ke.z+=.1*(Se.zPosition-ke.z),ie.identity(ue),ie.lookAt([ke.x,ke.y,ke.z],[ke.x,ke.y,0],[0,1,0],le),ie.perspective(60,ee/te,.1,20,fe),ie.multiply(fe,le,ve),ie.rotate(ue,ze.x,[0,1,0],ue),ie.rotate(ue,ze.y,[-1,0,0],ue),ie.multiply(ve,ue,pe)}function Je(e,t){switch(Se[e]=t,e){case"customSwitch":Ie=Se.customSwitch?1:0;break;case"animation":switch(Se.animation){case"normal":xe=0;break;case"warp":xe=1;break;case"pop":xe=2;break;case"none":default:xe=-1}break;case"pointSize":Ve=Se.pointSize*te/930/Math.pow(Ue,.4);break;case"lineShape":switch(Se.lineShape){case"mesh":ye=ae,ge=(4*(P["k"]-1)+2)*(P["k"]-1);break;case"line":default:ye=se,ge=P["k"]*P["k"]}break;case"deformation":1===Te.target.deformationProgress?(Xe=Se.deformation,Te.reverse()):(He=Se.deformation,Te.play());break;case"bgColor":var n=255*Se.bgColor;document.body.style.backgroundColor="rgb(".concat(n,", ").concat(n,", ").concat(n,")");break;case"pointer":Se.pointer||(Fe={x:0,y:0});break;case"pointerPosition":Se.pointer&&(Fe=t);break;case"capture":Le=Se.capture?1:0,Ne=Se.capture;break;case"stopMotion":Le=Se.stopMotion?1:0,Se.stopMotion?_e=setInterval(function(){Ne=!0},1e3/3):clearTimeout(_e);break;case"effect":De.currentPost=Pe[Se.effect||P["m"][0]];break;case"effect2":De.currentPost2=Pe[Se.effect2||P["m"][0]];break;case"lastEffect":De.lastPost=Pe[Se.lastEffect||P["m"][0]];break;case"video":he=de.currentVideo;break;case"detect":Me=t;break;case"inputAudio":Oe=Se.inputAudio?1:0;break}}function Qe(){we=!1}function et(){we=!0,me()}var tt=n("pEvf"),nt=!1,ot={mounted:function(){var e=this;if(nt)et();else{nt=!0;var t=new tt["a"](P["o"],P["k"]);t.enumerateDevices().then(Object(D["a"])(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.getUserMedia();case 2:je({canvas:e.$el,settings:e.settings,media:t}),u.on("dispatch-media",function(){var e=Object(D["a"])(regeneratorRuntime.mark(function e(n,o,i){return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:e.t0=o,e.next="video"===e.t0?3:"audio"===e.t0?7:9;break;case 3:return e.next=5,t.getUserMedia({video:i});case 5:return i=e.sent,e.abrupt("break",9);case 7:return t.getUserMedia({audio:i}),e.abrupt("return");case 9:Je(o,i);case 10:case"end":return e.stop()}},e,this)}));return function(t,n,o){return e.apply(this,arguments)}}()),u.send("receive-media",t);case 5:case"end":return n.stop()}},n,this)})));var n={init:function(t){e.settings=t},update:function(e,t){Je(e,t)}};u.on("dispatch-webcam-particle",function(e,t){for(var o=arguments.length,i=new Array(o>2?o-2:0),r=2;r<o;r++)i[r-2]=arguments[r];n[t].apply(n,i)})}},beforeDestroy:function(){Qe()}},it=ot,rt=Object(h["a"])(it,U,R,!1,null,null,null),st=rt.exports,at=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("canvas")},ct=[],ut=(n("FLlr"),n("Womt")),lt=function(e){var t=document.documentElement.clientWidth||document.body.clientWidth,n=window.innerHeight,o=.5*t,i=.5*n;function r(){this.init(),this.createMesh(),this.handleEvents(),window.requestAnimationFrame(this.render.bind(this))}r.prototype.init=function(){this.speed=.02,this.mouse={position:new ut["y"](0,0),target:new ut["y"](0,0)},this.renderer=new ut["A"]({antialias:!0,canvas:e}),this.renderer.setSize(t,n),this.renderer.setClearColor(2236962),this.camera=new ut["s"](15,t/n,.01,1e3),this.camera.position.z=.35,this.scene=new ut["u"],this.scene.fog=new ut["h"](2236962,.6,2.8)},r.prototype.createMesh=function(){for(var e=[],t=0;t<5;t+=1)e.push(new ut["z"](0,0,t/4*2.5));e[4].y=-.06,this.curve=new ut["c"](e);var n=new ut["i"];n.vertices=this.curve.getPoints(70),this.splineMesh=new ut["l"](n,new ut["m"]),this.tubeMaterial=new ut["q"]({side:ut["a"],map:s.stone.texture,bumpMap:s.stoneBump.texture,bumpScale:3e-4});var o=new ut["j"](16777147,8943993,.9);this.scene.add(o);var i=new ut["e"](16777215,.8);this.scene.add(i),this.tubeMaterial.map.wrapS=ut["t"],this.tubeMaterial.map.wrapT=ut["t"],this.tubeMaterial.map.repeat.set(30,6),this.tubeMaterial.bumpMap.wrapS=ut["t"],this.tubeMaterial.bumpMap.wrapT=ut["t"],this.tubeMaterial.bumpMap.repeat.set(30,6),this.tubeGeometry=new ut["x"](this.curve,70,.02,50,!1),this.tubeMesh=new ut["n"](this.tubeGeometry,this.tubeMaterial),this.scene.add(this.tubeMesh),this.tubeGeometry_o=this.tubeGeometry.clone()},r.prototype.handleEvents=function(){window.addEventListener("resize",this.onResize.bind(this),!1),document.body.addEventListener("mousemove",this.onMouseMove.bind(this),!1)},r.prototype.onResize=function(){t=document.documentElement.clientWidth||document.body.clientWidth,n=window.innerHeight,o=.5*t,i=.5*n,this.camera.aspect=t/n,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,n)},r.prototype.onMouseMove=function(e){this.mouse.target.x=(e.clientX-o)/o,this.mouse.target.y=(i-e.clientY)/i},r.prototype.updateCameraPosition=function(){this.mouse.position.x+=(this.mouse.target.x-this.mouse.position.x)/30,this.mouse.position.y+=(this.mouse.target.y-this.mouse.position.y)/30,this.camera.rotation.z=.2*this.mouse.position.x,this.camera.rotation.y=Math.PI-.06*this.mouse.position.x,this.camera.position.x=.015*this.mouse.position.x,this.camera.position.y=.015*-this.mouse.position.y},r.prototype.updateMaterialOffset=function(){this.tubeMaterial.map.offset.x+=this.speed},r.prototype.updateCurve=function(){for(var e=0,t=null,n=null,o=0,i=this.tubeGeometry.vertices.length;o<i;o+=1)t=this.tubeGeometry_o.vertices[o],n=this.tubeGeometry.vertices[o],e=Math.floor(o/50),n.x+=(t.x+this.splineMesh.geometry.vertices[e].x-n.x)/10,n.y+=(t.y+this.splineMesh.geometry.vertices[e].y-n.y)/5;this.tubeGeometry.verticesNeedUpdate=!0,this.curve.points[2].x=.1*-this.mouse.position.x,this.curve.points[4].x=.1*-this.mouse.position.x,this.curve.points[2].y=.1*this.mouse.position.y,this.splineMesh.geometry.verticesNeedUpdate=!0,this.splineMesh.geometry.vertices=this.curve.getPoints(70)},r.prototype.render=function(){this.updateMaterialOffset(),this.updateCameraPosition(),this.updateCurve(),this.renderer.render(this.scene,this.camera),window.requestAnimationFrame(this.render.bind(this))};var s={stone:{url:"/src/visual/assets/img/infiniteTubes/brick/stonePattern.jpg"},stoneBump:{url:"/src/visual/assets/img/infiniteTubes/brick/stonePatternBump.jpg"}},a=new ut["w"];for(var c in a.crossOrigin="Anonymous",s)(function(e){a.load(s[e].url,function(t){s[e].texture=t,l()})})(c);var u=0;function l(){u++,u===Object.keys(s).length&&(document.body.classList.remove("loading"),window.tunnel=new r)}},ft=n("z/o8"),vt=function(e){var t=window.innerWidth,n=window.innerHeight,o=t<500;function i(){this.init(),this.createMesh(),this.handleEvents(),window.requestAnimationFrame(this.render.bind(this))}function r(e,t,n){var o=.002*Math.random()+3e-4,i=this.icosahedron,r=Math.random();r>.9?i=this.cube:r>.8&&(i=this.sphere);var s=50;if(t)this.color=new ut["d"]("hsl("+n/50+",100%,60%)");else{var a=180;this.color=new ut["d"]("hsl("+(Math.random()*s+a)+",100%,80%)")}var c=new ut["p"]({color:this.color,shading:ut["g"]});this.mesh=new ut["n"](i,c),this.mesh.scale.set(o,o,o),this.mesh.position.set(0,0,1.5),this.percent=t?.2:Math.random(),this.burst=!!t,this.offset=new ut["z"](.025*(Math.random()-.5),.025*(Math.random()-.5),0),this.speed=.004*Math.random()+2e-4,this.burst&&(this.speed+=.003,this.mesh.scale.x*=1.4,this.mesh.scale.y*=1.4,this.mesh.scale.z*=1.4),this.rotate=new ut["z"](.1*-Math.random()+.01,0,.01*Math.random()),this.pos=new ut["z"](0,0,0),e.add(this.mesh)}i.prototype.init=function(){this.speed=1,this.prevTime=0,this.mouse={position:new ut["y"](.5*t,.7*n),ratio:new ut["y"](0,0),target:new ut["y"](.5*t,.7*n)},this.renderer=new ut["A"]({antialias:!0,canvas:e}),this.renderer.setSize(t,n),this.camera=new ut["s"](15,t/n,.01,100),this.camera.rotation.y=Math.PI,this.camera.position.z=.35,this.scene=new ut["u"],this.scene.fog=new ut["h"](3365,.05,1.6);var o=new ut["j"](15331314,65807,1);this.scene.add(o),this.addParticle()},i.prototype.addParticle=function(){this.particles=[];for(var e=0;e<(o?70:150);e++)this.particles.push(new r(this.scene))},i.prototype.createMesh=function(){var e=[],t=0,n=new ut["i"];for(this.scene.remove(this.tubeMesh),t=0;t<5;t+=1)e.push(new ut["z"](0,0,t/4*2.5));e[4].y=-.06,this.curve=new ut["c"](e),this.curve.type="catmullrom",n=new ut["i"],n.vertices=this.curve.getPoints(70),this.splineMesh=new ut["l"](n,new ut["m"]),this.tubeMaterial=new ut["o"]({side:ut["a"],color:16777215}),this.tubeGeometry=new ut["x"](this.curve,70,.02,30,!1),this.tubeGeometry_o=this.tubeGeometry.clone(),this.tubeMesh=new ut["n"](this.tubeGeometry,this.tubeMaterial),this.scene.add(this.tubeMesh)},i.prototype.handleEvents=function(){window.addEventListener("resize",this.onResize.bind(this),!1),document.body.addEventListener("mousemove",this.onMouseMove.bind(this),!1),document.body.addEventListener("touchmove",this.onMouseMove.bind(this),!1),document.body.addEventListener("touchstart",this.onMouseDown.bind(this),!1),document.body.addEventListener("mousedown",this.onMouseDown.bind(this),!1),document.body.addEventListener("mouseup",this.onMouseUp.bind(this),!1),document.body.addEventListener("mouseleave",this.onMouseUp.bind(this),!1),document.body.addEventListener("touchend",this.onMouseUp.bind(this),!1),window.addEventListener("mouseout",this.onMouseUp.bind(this),!1)},i.prototype.onMouseDown=function(){this.mousedown=!0,ft["a"].to(this.scene.fog.color,.6,{r:1,g:1,b:1}),ft["a"].to(this.tubeMaterial.color,.6,{r:0,g:0,b:0}),ft["a"].to(this,1.5,{speed:.1,ease:Power2.easeInOut})},i.prototype.onMouseUp=function(){this.mousedown=!1,ft["a"].to(this.scene.fog.color,.6,{r:0,g:.050980392156862744,b:.1450980392156863}),ft["a"].to(this.tubeMaterial.color,.6,{r:1,g:1,b:1}),ft["a"].to(this,.6,{speed:1,ease:Power2.easeIn})},i.prototype.onResize=function(){t=window.innerWidth,n=window.innerHeight,o=t<500,this.camera.aspect=t/n,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,n)},i.prototype.onMouseMove=function(e){"mousemove"===e.type?(this.mouse.target.x=e.clientX,this.mouse.target.y=e.clientY):(this.mouse.target.x=e.touches[0].clientX,this.mouse.target.y=e.touches[0].clientY)},i.prototype.updateCameraPosition=function(){this.mouse.position.x+=(this.mouse.target.x-this.mouse.position.x)/30,this.mouse.position.y+=(this.mouse.target.y-this.mouse.position.y)/30,this.mouse.ratio.x=this.mouse.position.x/t,this.mouse.ratio.y=this.mouse.position.y/n,this.camera.rotation.z=1*this.mouse.ratio.x-.05,this.camera.rotation.y=Math.PI-(.3*this.mouse.ratio.x-.15),this.camera.position.x=.044*this.mouse.ratio.x-.025,this.camera.position.y=.044*this.mouse.ratio.y-.025},i.prototype.updateCurve=function(){var e=0,t=0,n=null,o=null;for(e=0;e<this.tubeGeometry.vertices.length;e+=1)n=this.tubeGeometry_o.vertices[e],o=this.tubeGeometry.vertices[e],t=Math.floor(e/30),o.x+=(n.x+this.splineMesh.geometry.vertices[t].x-o.x)/15,o.y+=(n.y+this.splineMesh.geometry.vertices[t].y-o.y)/15;this.tubeGeometry.verticesNeedUpdate=!0,this.curve.points[2].x=.6*(1-this.mouse.ratio.x)-.3,this.curve.points[3].x=0,this.curve.points[4].x=.6*(1-this.mouse.ratio.x)-.3,this.curve.points[2].y=.6*(1-this.mouse.ratio.y)-.3,this.curve.points[3].y=0,this.curve.points[4].y=.6*(1-this.mouse.ratio.y)-.3,this.splineMesh.geometry.verticesNeedUpdate=!0,this.splineMesh.geometry.vertices=this.curve.getPoints(70)},i.prototype.render=function(e){this.updateCameraPosition(),this.updateCurve();for(var t=0;t<this.particles.length;t++)this.particles[t].update(this),this.particles[t].burst&&this.particles[t].percent>1&&(this.particles.splice(t,1),t--);this.mousedown&&e-this.prevTime>20&&(this.prevTime=e,this.particles.push(new r(this.scene,!0,e)),o||(this.particles.push(new r(this.scene,!0,e)),this.particles.push(new r(this.scene,!0,e)))),this.renderer.render(this.scene,this.camera),window.requestAnimationFrame(this.render.bind(this))},r.prototype.cube=new ut["b"](1,1,1),r.prototype.sphere=new ut["v"](1,6,6),r.prototype.icosahedron=new ut["k"](1,0),r.prototype.update=function(e){this.percent+=this.speed*(this.burst?1:e.speed),this.pos=e.curve.getPoint(1-this.percent%1).add(this.offset),this.mesh.position.x=this.pos.x,this.mesh.position.y=this.pos.y,this.mesh.position.z=this.pos.z,this.mesh.rotation.x+=this.rotate.x,this.mesh.rotation.y+=this.rotate.y,this.mesh.rotation.z+=this.rotate.z},window.tunnel=new i},pt=function(e){var t=window.innerWidth,n=window.innerHeight;function o(e){this.init(),this.createMesh(e),this.handleEvents(),this.initAnimation(),window.requestAnimationFrame(this.render.bind(this))}o.prototype.init=function(){this.speed=8,this.mouse={position:new ut["y"](.5*t,.5*n),ratio:new ut["y"](0,0),target:new ut["y"](.5*t,.5*n)},this.renderer=new ut["A"]({antialias:!0,canvas:e}),this.renderer.setSize(t,n),this.camera=new ut["s"](15,t/n,.01,1e3),this.camera.rotation.y=Math.PI,this.camera.position.z=.35,this.scene=new ut["u"]},o.prototype.createMesh=function(e){var t=[],n=0,o=new ut["i"];for(this.scene.remove(this.tubeMesh),n=0;n<5;n+=1)t.push(new ut["z"](0,0,n/4*3));t[4].y=-.06,this.curve=new ut["c"](t),this.curve.type="catmullrom",o=new ut["i"],o.vertices=this.curve.getPoints(70),this.splineMesh=new ut["l"](o,new ut["m"]),this.tubeMaterial=new ut["o"]({side:ut["a"],map:e}),this.tubeMaterial.map.wrapS=ut["r"],this.tubeMaterial.map.wrapT=ut["r"],this.tubeMaterial.map.repeat.set(this.tubeMaterial.repx,this.tubeMaterial.repy),this.tubeGeometry=new ut["x"](this.curve,70,.02,30,!1),this.tubeGeometry_o=this.tubeGeometry.clone(),this.tubeMesh=new ut["n"](this.tubeGeometry,this.tubeMaterial),this.scene.add(this.tubeMesh)},o.prototype.handleEvents=function(){window.addEventListener("resize",this.onResize.bind(this),!1),document.body.addEventListener("mousemove",this.onMouseMove.bind(this),!1)},o.prototype.onResize=function(){t=window.innerWidth,n=window.innerHeight,this.camera.aspect=t/n,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,n)},o.prototype.onMouseMove=function(e){this.mouse.target.x=e.clientX,this.mouse.target.y=e.clientY},o.prototype.update=function(){this.createMesh()},o.prototype.initAnimation=function(){this.textureParams={offsetX:0,offsetY:0,repeatX:10,repeatY:4},this.cameraShake={x:0,y:0};var e=new TimelineMax({repeat:-1});e.to(this.textureParams,4,{repeatX:.3,ease:Power1.easeInOut}),e.to(this.textureParams,12,{offsetX:8,ease:Power2.easeInOut},0),e.to(this.textureParams,6,{repeatX:10,ease:Power2.easeInOut},"-=5");var t=new TimelineMax({repeat:-1,repeatDelay:5});t.to(this.cameraShake,2,{x:-.01,ease:RoughEase.ease.config({template:Power0.easeNone,strength:.5,points:100,taper:"none",randomize:!0,clamp:!1})},4),t.to(this.cameraShake,2,{x:0,ease:RoughEase.ease.config({template:Power0.easeNone,strength:.5,points:100,taper:"none",randomize:!0,clamp:!1})})},o.prototype.updateMaterialOffset=function(){this.tubeMaterial.map.offset.x=this.textureParams.offsetX,this.tubeMaterial.map.offset.y+=.001,this.tubeMaterial.map.repeat.set(this.textureParams.repeatX,this.textureParams.repeatY)},o.prototype.updateCameraPosition=function(){this.mouse.position.x+=(this.mouse.target.x-this.mouse.position.x)/50,this.mouse.position.y+=(this.mouse.target.y-this.mouse.position.y)/50,this.mouse.ratio.x=this.mouse.position.x/t,this.mouse.ratio.y=this.mouse.position.y/n,this.camera.position.x=.044*this.mouse.ratio.x-.025+this.cameraShake.x,this.camera.position.y=.044*this.mouse.ratio.y-.025},o.prototype.updateCurve=function(){var e=0,t=0,n=null,o=null;for(e=0;e<this.tubeGeometry.vertices.length;e+=1)n=this.tubeGeometry_o.vertices[e],o=this.tubeGeometry.vertices[e],t=Math.floor(e/30),o.x+=(n.x+this.splineMesh.geometry.vertices[t].x-o.x)/15,o.y+=(n.y+this.splineMesh.geometry.vertices[t].y-o.y)/15;this.tubeGeometry.verticesNeedUpdate=!0,this.curve.points[2].x=.6*(1-this.mouse.ratio.x)-.3,this.curve.points[3].x=0,this.curve.points[4].x=.6*(1-this.mouse.ratio.x)-.3,this.curve.points[2].y=.6*(1-this.mouse.ratio.y)-.3,this.curve.points[3].y=0,this.curve.points[4].y=.6*(1-this.mouse.ratio.y)-.3,this.splineMesh.geometry.verticesNeedUpdate=!0,this.splineMesh.geometry.vertices=this.curve.getPoints(70)},o.prototype.render=function(){this.updateMaterialOffset(),this.updateCameraPosition(),this.updateCurve(),this.renderer.render(this.scene,this.camera),window.requestAnimationFrame(this.render.bind(this))};var i=new ut["w"];i.crossOrigin="Anonymous",i.load("/src/visual/assets/img/infiniteTubes/starWars/galaxyTexture.jpg",function(e){document.body.classList.remove("loading"),window.tunnel=new o(e)})},mt=n("fLW6"),dt=function(e){var t=new mt["Noise"](Math.random()),n=window.innerWidth,o=window.innerHeight;function i(){this.init(),this.createMesh(),this.handleEvents(),window.requestAnimationFrame(this.render.bind(this))}function r(e,t,n){var o,i,r;if(0==t)o=i=r=n;else{var s=function(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e},a=n<.5?n*(1+t):n+t-n*t,c=2*n-a;o=s(c,a,e+1/3),i=s(c,a,e),r=s(c,a,e-1/3)}return[.01*Math.round(100*o),.01*Math.round(100*i),.01*Math.round(100*r)]}i.prototype.init=function(){this.speed=4,this.mouse={position:new ut["y"](.5*n,.5*o),ratio:new ut["y"](0,0),target:new ut["y"](.5*n,.5*o)},this.renderer=new ut["A"]({antialias:!0,canvas:e}),this.renderer.setSize(n,o),this.camera=new ut["s"](15,n/o,.01,10),this.camera.rotation.y=Math.PI,this.camera.position.z=.4,this.scene=new ut["u"],this.scene.fog=new ut["h"](16777215,1,1.9)},i.prototype.createMesh=function(){var e,n,o,i=[],r=0,s=new ut["i"];for(this.scene.remove(this.tubeMesh),r=0;r<5;r+=1)i.push(new ut["z"](0,0,r/4*3));i[4].y=-.06,this.curve=new ut["c"](i),this.curve.type="catmullrom",s=new ut["i"],s.vertices=this.curve.getPoints(120),this.splineMesh=new ut["l"](s,new ut["m"]),this.tubeMaterial=new ut["o"]({side:ut["a"],vertexColors:ut["f"]}),this.tubeGeometry=new ut["x"](this.curve,120,.02,3,!1);for(r=0;r<this.tubeGeometry.faces.length;r++)e=this.tubeGeometry.faces[r],n=this.tubeGeometry.vertices[e.a],o=new ut["d"]("hsl("+(.01*Math.floor(80*Math.abs(t.simplex3(2*n.x,4*n.y,2*n.z))*100)+180)+",70%,60%)"),e.color=o;this.tubeGeometry_o=this.tubeGeometry.clone(),this.tubeMesh=new ut["n"](this.tubeGeometry,this.tubeMaterial),this.scene.add(this.tubeMesh)},i.prototype.handleEvents=function(){window.addEventListener("resize",this.onResize.bind(this),!1),document.body.addEventListener("mousemove",this.onMouseMove.bind(this),!1)},i.prototype.onResize=function(){n=window.innerWidth,o=window.innerHeight,this.camera.aspect=n/o,this.camera.updateProjectionMatrix(),this.renderer.setSize(n,o)},i.prototype.onMouseMove=function(e){this.mouse.target.x=e.clientX,this.mouse.target.y=e.clientY},i.prototype.update=function(){this.createMesh()},i.prototype.updateCameraPosition=function(){this.mouse.position.x+=(this.mouse.target.x-this.mouse.position.x)/30,this.mouse.position.y+=(this.mouse.target.y-this.mouse.position.y)/30,this.mouse.ratio.x=this.mouse.position.x/n,this.mouse.ratio.y=this.mouse.position.y/o,this.camera.rotation.y=Math.PI-(.1*this.mouse.ratio.x-.05),this.camera.position.x=.008*this.mouse.ratio.x-.004,this.camera.position.y=.008*this.mouse.ratio.y-.004},i.prototype.updateCurve=function(e){var n,o,i,s,a,c=0,u=0,l=null,f=null;for(c=0;c<this.tubeGeometry.vertices.length;c+=1)l=this.tubeGeometry_o.vertices[c],f=this.tubeGeometry.vertices[c],u=Math.floor(c/120),f.x+=(l.x+this.splineMesh.geometry.vertices[u].x-f.x)/15,f.y+=(l.y+this.splineMesh.geometry.vertices[u].y-f.y)/15,f.applyAxisAngle(new ut["z"](0,0,1),.1*Math.abs(Math.cos(.001*e+5*f.z)));this.tubeGeometry.verticesNeedUpdate=!0,this.curve.points[2].x=100*(1-this.mouse.ratio.x)-50,this.curve.points[4].x=100*(1-this.mouse.ratio.x)-50,this.curve.points[2].y=100*(1-this.mouse.ratio.y)-50,this.curve.points[4].y=100*(1-this.mouse.ratio.y)-50,this.splineMesh.geometry.verticesNeedUpdate=!0,this.splineMesh.geometry.vertices=this.curve.getPoints(120),e*=3e-4;for(c=0;c<this.tubeGeometry.faces.length;c++)n=this.tubeGeometry.faces[c],o=this.tubeGeometry.vertices[n.a],i=(.01*Math.floor(80*Math.abs(t.simplex3(2*o.x,4*o.y,2*o.z+e))*100)+180)/360,s=r(i,.7,.6),a=new ut["d"](s[0],s[1],s[2]),n.color=a;this.tubeGeometry.elementsNeedUpdate=!0},i.prototype.render=function(e){this.updateCameraPosition(),this.updateCurve(e),this.renderer.render(this.scene,this.camera),window.requestAnimationFrame(this.render.bind(this))},window.tunnel=new i},ht={brick:lt,particles:vt,starWars:pt,triangle:dt};function xt(){var e=this.$el;ht[this.visual.demo](e)}var yt={props:["visual"],mounted:xt},gt=yt,bt=Object(h["a"])(gt,at,ct,!1,null,null,null),wt=bt.exports,Tt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div")},_t=[],Et=n("aQzn"),Ut=n.n(Et);function Rt(){var e=["#ff8e8e","#ff8ec6","#ff8eff","#c68eff","#8e8eff","#8ec6ff","#8effff","#8effc6","#8eff8e","#c6ff8e","#ffff8e","#ffc68e","#fff"],t=e.length,n=new Ut.a({type:Ut.a.Types["canvas"],fullscreen:!0,autostart:!0}).appendTo(this.$el),o=[],i=new Ut.a.Vector(0,.66),r={family:"proxima-nova, sans-serif",size:50,leading:50,weight:900},s=n.makeText("Start Typing",n.width/2,n.height/2,r);function a(i){var s=Math.random()*n.width/2+n.width/4,a=1.25*n.height,c=n.makeText(i,s,a,r);c.size*=2,c.fill=e[Math.floor(Math.random()*t)],c.velocity=new Ut.a.Vector,c.velocity.x=10*(Math.random()-.5),c.velocity.y=-(20*Math.random()+15),c.velocity.r=Math.random()*Math.PI/8,o.push(c)}s.fill="white",window.addEventListener("keydown",function(e){var t=String.fromCharCode(e.which);a(t)},!1),n.bind("resize",function(){s.translation.set(n.width/2,n.height/2)}).bind("update",function(){for(var e=0;e<o.length;e++){var t=o[e];t.translation.addSelf(t.velocity),t.rotation+=t.velocity.r,t.velocity.addSelf(i),t.velocity.y>0&&t.translation.y>n.height&&(n.scene.remove(t),o.splice(e,1))}})}var Dt={mounted:Rt},Pt=Dt,St=Object(h["a"])(Pt,Tt,_t,!1,null,null,null),Mt=St.exports,Ct={props:["visual","order","isShow"],components:{iframeTag:y,videoTag:E,webcamParticle:st,infiniteTubes:wt,dynamicText:Mt}},At=Ct,Ft=(n("3H5l"),Object(h["a"])(At,l,f,!1,null,null,null)),zt=Ft.exports,kt=o["default"].extend(zt),It={name:"visual",data:function(){return{components:{}}},mounted:function(){var e=this,t=function(){u.send("receive-window",{width:window.innerWidth,height:window.innerHeight})};t(),window.addEventListener("resize",t);var n={addDisplayingVideo:function(t){var n=e.components[t.id];if(n)n.isShow=!0;else{var o=new kt({propsData:{visual:t,isShow:!0}}).$mount();e.$el.appendChild(o.$el),e.components[t.id]=o}},updateDisplayingVideosOrder:function(t){t.forEach(function(t,n){e.components[t.id].order=n})},updateOpacity:function(t){e.components[t.id].visual.opacity=t.opacity},removeDisplayingVideo:function(t){var n=e.components[t.id];n.isShow=!1,e.$el.removeChild(n.$el)},refresh:function(){location.reload()}};u.on("dispatch-connect",function(e,t){for(var o=arguments.length,i=new Array(o>2?o-2:0),r=2;r<o;r++)i[r-2]=arguments[r];n[t].apply(n,i)})}},Lt=It,Nt=(n("v98b"),Object(h["a"])(Lt,i,r,!1,null,null,null)),Ot=Nt.exports;o["default"].config.productionTip=!1,new o["default"]({render:function(e){return e(Ot)}}).$mount("#app")},RHrd:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform vec2 resolution;\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  vec2 p = coord * 2. - 1.;\n  gl_FragColor = vec4(p, 1., 1.);\n}\n"},XQim:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D prevPositionTexture;\nuniform sampler2D velocityTexture;\nuniform sampler2D pictureTexture;\nuniform vec2      resolution;\n\nconst float limitMin = -5.;\nconst float limitMax = 5.;\n\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  vec2 pos = coord * 2. - 1.;\n  vec4 prevPosition = texture2D(prevPositionTexture, coord);\n  vec4 velocity = texture2D(velocityTexture, coord);\n  vec4 picture = texture2D(pictureTexture, coord);\n  float color = length(picture.rgb);\n  float startY = pos.y;\n  float y = mix(prevPosition.y + velocity.y, startY, picture.w);\n  gl_FragColor = vec4(prevPosition.x, clamp(y, limitMin, limitMax), prevPosition.z, 1.);\n}\n"},ZTj8:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nuniform vec2      resolution;\nuniform float     volume;\nuniform float     isAudio;\nvarying vec2      vUv;\n\nhighp float random_1_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\n\nconst float interval = 3.;\nconst float divisionPx = 8.;\nconst float deflection = 0.01;\nconst float rgbDiff = 0.5;\n\nvoid main(){\n  float rnd = random_1_0(vec2(time));\n  float modTime = mod(time, interval);\n  float regularBomb = smoothstep(interval - 0.3 * 2., interval - 0.3, modTime) * (1. - smoothstep(interval - 0.3, interval, modTime)) * 0.05;\n  float strength = (rnd * 2. - 1.) * ((1. - isAudio) * regularBomb + isAudio * (volume - 1.) * 0.01);\n\n  float yRnd = random_1_0(vec2(0., floor(vUv.y * resolution.y / divisionPx)) + mod(time, 10.));\n  vec2 uv = vec2(vUv.x + (yRnd * 2. - 1.) * deflection * (strength + rnd * 0.4), vUv.y);\n\n  uv += strength * 3.;\n  float cRgbDiff = rgbDiff * (strength + rnd * 0.01);\n  float r = texture2D(texture, vec2(uv.x + cRgbDiff, uv.y)).r;\n  float g = texture2D(texture, vec2(uv.x, uv.y)).g;\n  float b = texture2D(texture, vec2(uv.x - cRgbDiff, uv.y)).b;\n  vec4 color = vec4(r, g, b, 1.0);\n\n  float scanLine = abs(sin(gl_FragCoord.y + time * 0.8)) * 0.5 + 0.5;\n  color *= scanLine;\n\n  gl_FragColor = color;\n}\n"},dvdD:function(e,t){e.exports="#define GLSLIFY 1\nattribute vec4 data;\nuniform mat4 mvpMatrix;\nuniform float pointSize;\nuniform sampler2D positionTexture;\nuniform sampler2D logoTexture;\nuniform sampler2D logo2Texture;\nuniform sampler2D faceTexture;\nuniform float volume;\nuniform float isAudio;\nuniform float pointShape;\nuniform float prevDeformation;\nuniform float nextDeformation;\nuniform float deformationProgress;\nuniform float loopCount;\nvarying vec2 vTexCoord;\nvarying vec4 vPosition;\n\nhighp float random_1_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\n\nconst float speed = 0.3;\nconst float amplitude = 0.1;\nconst float halfAmplitude = amplitude / 2.;\nconst float standardRadius = 1.1;\nconst float maxDeformationDistance = 2.;\nconst float deformationMaxSize = 1. / maxDeformationDistance;\n\nvoid main(){\n  vec2 texCoord = data.xy;\n\n  float deformationValue = 1. - abs(deformationProgress - 0.5) * 2.;\n  float deformationDistance = mix(1., maxDeformationDistance, deformationValue);\n  float deformationSize = mix(1., deformationMaxSize, deformationValue);\n  vec4 position = texture2D(positionTexture, texCoord);\n  position.xy *= pow(deformationDistance, 1.5);\n  position.z *= ((isAudio == 1.) ? volume : 1.) * deformationDistance;\n  vec4 videoPosition = vec4(position.xyz, 1.);\n  float videoSize = min(position.z, 10.) * pointSize * deformationSize;\n  videoSize *= (pointShape == 2.) ? 4. :\n    (pointShape == 1.) ? 1.3 :\n    1.;\n\n  float randomValue = (data.w + random_1_0(texCoord + mod(loopCount, 10.))) / 2.;\n  float radian = loopCount * speed * randomValue;\n  float radius = standardRadius + randomValue * amplitude - halfAmplitude;\n  vec4 circlePosition = vec4(cos(radian) * radius, sin(radian) * radius, data.z * 0.1, 1.);\n\n  vec2 imageTexCoord = vec2(texCoord.x, 1. - texCoord.y);\n  vec4 logoPosition = vec4(texCoord * 2. - 1., 0., texture2D(logoTexture, imageTexCoord).a);\n  vec4 logo2Position = vec4(texCoord * 2. - 1., 0., texture2D(logo2Texture, imageTexCoord).a);\n  vec4 facePosition = vec4(texCoord * 2. - 1., 0., texture2D(faceTexture, imageTexCoord).a);\n\n  vTexCoord = texCoord;\n  vPosition = position;\n  gl_Position = mvpMatrix * mix(\n    (prevDeformation == 4.) ? logo2Position :\n    (prevDeformation == 3.) ? facePosition :\n    (prevDeformation == 2.) ? logoPosition :\n    (prevDeformation == 1.) ? circlePosition :\n    videoPosition,\n    (nextDeformation == 4.) ? logo2Position :\n    (nextDeformation == 3.) ? facePosition :\n    (nextDeformation == 2.) ? logoPosition :\n    (nextDeformation == 1.) ? circlePosition :\n    videoPosition,\n    deformationProgress);\n  gl_PointSize = mix(\n    (prevDeformation == 0.) ? videoSize : pointSize,\n    (nextDeformation == 0.) ? videoSize : pointSize,\n    deformationProgress);\n}\n"},fKsm:function(e,t,n){},gJVG:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nuniform vec2      resolution;\nuniform float     volume;\nuniform float     custom;\nuniform float     customSwitch;\nvarying vec2      vUv;\n\nhighp float random_2_0(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\nvec3 hsv_1_1(float h, float s, float v) {\n  vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n  return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\n\n\n\nconst float PI = 3.1415926;\nconst float PI2 = PI * 2.0;\nconst float interval = 10.;\nconst float rgbDiff = 0.1;\nconst float offInterval = 3.;\nconst float onInterval = 1.;\nconst float colorInterval = 40.;\nconst float binalizationThreshold = 0.3;\n\nvoid main(){\n  vec4 video = texture2D(texture, vUv);\n\n  float nTime = mod(time, interval) / interval;\n  float average = (video.r + video.g + video.b) / 3.;\n  vec3 mono = vec3(average);\n  vec3 binary = vec3(step(binalizationThreshold, average));\n\n  float colorNTime = mod(time, colorInterval) / colorInterval;\n  vec3 rndColor = hsv_1_1(colorNTime * PI2, 0.7, 1.);\n\n  float rnd = random_2_0(vec2(time));\n  float strength = sin(nTime * PI2);\n  float cRgbDiff = rgbDiff * (strength + rnd * 0.01);\n  float r = texture2D(texture, vec2(vUv.x + cRgbDiff, vUv.y)).r;\n  float g = texture2D(texture, vec2(vUv.x, vUv.y)).g;\n  float b = texture2D(texture, vec2(vUv.x - cRgbDiff, vUv.y)).b;\n  vec4 color = vec4(r, g, b, 1.0);\n\n  float offNTime = mod(time, offInterval) / offInterval;\n  float onNTime = mod(time, onInterval) / onInterval;\n  vec2 uv = (vUv - 0.5) / mix(1.05, mix(0.8, 1.4, onNTime), customSwitch) + 0.5;\n  uv.x += sin(offNTime * PI2) * 0.01 * (1. - customSwitch);\n  vec4 color2 = texture2D(texture, uv);\n  vec3 binary2 = vec3(step(binalizationThreshold, (color2.r + color2.g + color2.b) / 3.));\n  // color2 = vec4(vec3(color2.r, 0., 0.), 0.5);\n  color2.rgb = binary2 * rndColor;\n\n  // gl_FragColor = video + color * color2;\n  gl_FragColor = video * 0.5 + color2;\n  // gl_FragColor = mono;\n  // gl_FragColor = color2;\n}\n"},gWk7:function(e,t){e.exports="#define GLSLIFY 1\nattribute vec3 position;\nvarying   vec2 vUv;\n\nvoid main(){\n  gl_Position = vec4(position, 1.0);\n  vUv = (position.xy + 1.0) * 0.5;\n}\n"},mOvI:function(e,t,n){},nH8L:function(e,t,n){"use strict";var o=n("mOvI"),i=n.n(o);i.a},ng0g:function(e,t){e.exports="#define GLSLIFY 1\nattribute vec3 position;\nvoid main(){\n  gl_Position = vec4(position, 1.0);\n}\n"},oDws:function(e,t,n){"use strict";n.d(t,"b",function(){return o}),n.d(t,"a",function(){return i});n("rGqo"),n("hhXQ");function o(e){return Object.values(e)[0]}function i(e,t,n){return Math.min(n,Math.max(t,e))}},pEvf:function(e,t,n){"use strict";n("NO8f"),n("91GP"),n("pIFo"),n("rGqo");var o=n("xmWZ"),i=n("qpph"),r=n("oDws"),s=(n("ls82"),n("MECJ")),a=n("zhpf"),c=function(){function e(t){Object(o["a"])(this,e),this.webcamElement=t}return Object(i["a"])(e,[{key:"capture",value:function(){var e=this;return a["tidy"](function(){var t=a["fromPixels"](e.webcamElement),n=e.cropImage(t),o=n.expandDims(0);return o.toFloat().div(a["scalar"](255))})}},{key:"cropImage",value:function(e){var t=Math.min(e.shape[0],e.shape[1]),n=e.shape[0]/2,o=n-t/2,i=e.shape[1]/2,r=i-t/2;return e.slice([o,r,0],[t,t,3])}},{key:"adjustVideoSize",value:function(e,t){var n=e/t;e>=t?this.webcamElement.width=n*this.webcamElement.height:e<t&&(this.webcamElement.height=this.webcamElement.width/n)}},{key:"setup",value:function(){var e=Object(s["a"])(regeneratorRuntime.mark(function e(){var t,n=this;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){e.next=9;break}return e.next=3,navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}});case 3:return t=e.sent,window.stream=t,this.webcamElement.srcObject=t,e.abrupt("return",new Promise(function(e){n.webcamElement.onloadedmetadata=function(){n.adjustVideoSize(n.webcamElement.videoWidth,n.webcamElement.videoHeight),e()}}));case 9:throw new Error("No webcam found!");case 10:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()}]),e}();n.d(t,"a",function(){return u});var u=function(){function e(t,n){Object(o["a"])(this,e),this.size=t,this.pointResolution=n,this.video=document.createElement("video"),this.video.width=this.size,this.video.height=this.size,this.video.loop=!0,this.video.muted=!0,this.currentVideo=this.video,this.videoDevices={},this.videoFiles={},this.audioDevices={},this.audioCtx=new AudioContext,this.initWebcam(),this.loadSmartphone()}return Object(i["a"])(e,[{key:"initWebcam",value:function(){this.webcam=new c(this.currentVideo),this.webcam.adjustVideoSize(this.currentVideo.videoWidth||this.currentVideo.naturalWidth,this.currentVideo.videoHeight||this.currentVideo.naturalHeight)}},{key:"initVideoFiles",value:function(){var e=this;["live-1-2"].forEach(function(t){var n="file:".concat(t),o=document.createElement("video");o.src="/src/visual/assets/video/".concat(t,".mp4"),o.width=e.size,o.height=e.size,o.loop=!0,o.muted=!0,e.videoDevices["File: ".concat(t)]=n,e.videoFiles[n]=o})}},{key:"loadSmartphone",value:function(){var e=document.getElementById("smartphone");e&&(this.smartphone=e,this.smartphone.width=this.size,this.smartphone.height=this.size,this.videoDevices["Smartphone"]="smartphone")}},{key:"enumerateDevices",value:function(){var e=this;return navigator.mediaDevices.enumerateDevices().then(function(t){var n={},o={};t.forEach(function(e){switch(e.kind){case"videoinput":n[e.label.replace(/ \(.+?\)/,"")]=e.deviceId;break;case"audioinput":o[e.label.replace(/ \(.+?\)/,"")]=e.deviceId;break}}),e.videoSource=n["HD Pro Webcam C920"]||Object(r["b"])(n),e.audioSource=o["HD Pro Webcam C920"]||Object(r["b"])(o),Object.assign(e.videoDevices,n),Object.assign(e.audioDevices,o)})}},{key:"getUserMedia",value:function(){var e,t,n=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return/^file:/.test(o.video)?e=this.videoFiles[o.video]:"smartphone"===o.video&&(t=this.smartphone),this.videoSource=o.video||this.videoSource,this.audioSource=o.audio||this.audioSource,new Promise(function(o){navigator.mediaDevices.getUserMedia({audio:{deviceId:n.audioSource},video:{deviceId:n.videoSource}}).then(function(i){e?n.currentVideo=e:t?n.currentVideo=t:(n.video.srcObject=i,n.currentVideo=n.video);var r=n.audioCtx.createMediaStreamSource(i);n.analyser=n.audioCtx.createAnalyser(),n.analyser.fftSize=n.pointResolution,r.connect(n.analyser),n.array=new Uint8Array(n.analyser.fftSize);var s=function e(){n.currentVideo.removeEventListener("canplay",e),n.currentVideo.play(),n.initWebcam(),o(n.currentVideo)};t?o(n.currentVideo):n.currentVideo.readyState>=HTMLMediaElement.HAVE_FUTURE_DATA?s():n.currentVideo.addEventListener("canplay",s)}).catch(function(e){console.error(e)})})}},{key:"getVolume",value:function(){var e=0;this.analyser.getByteTimeDomainData(this.array);for(var t=0;t<this.analyser.fftSize;++t)e=Math.max(this.array[t],e);return e/255*2}}]),e}()},qUcY:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform vec2      resolution;\nuniform vec2      videoResolution;\nuniform sampler2D videoTexture;\nuniform float     zoom;\nuniform vec2      zoomPos;\nuniform float     focusCount;\nuniform vec4      focusPos1;\nuniform vec4      focusPos2;\nuniform vec4      focusPos3;\nuniform vec4      focusPos4;\n\nvec2 adjustRatio_1_0(vec2 coord, vec2 inputResolution, vec2 outputResolution) {\n  vec2 ratio = vec2(\n    min((outputResolution.x / outputResolution.y) / (inputResolution.x / inputResolution.y), 1.0),\n    min((outputResolution.y / outputResolution.x) / (inputResolution.y / inputResolution.x), 1.0)\n  );\n  return vec2(\n    coord.x * ratio.x + (1.0 - ratio.x) * 0.5,\n    coord.y * ratio.y + (1.0 - ratio.y) * 0.5\n  );\n}\n\n\n\n\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  coord.y = 1. - coord.y;\n\n  float zoomScale = 1. / zoom;\n  vec2 defaultCoord = coord * zoomScale + (1. - zoomScale) / 2. + zoomPos * zoomScale;\n\n  float count = max(focusCount, 1.);\n  float width = 1. / count;\n  vec4 pos = (count >= 4. && coord.x > width * 3.) ? focusPos4\n    : (count >= 3. && coord.x > width * 2.) ? focusPos3\n    : (count >= 2. && coord.x > width * 1.) ? focusPos2\n    : focusPos1;\n  vec2 center = vec2(mix(pos.y, pos.w, 0.5), pos.x);\n  float scale = (width + (1. - width) / 5.) / zoom;\n  float focusWidth = width * scale;\n  float focusHalfWidth = focusWidth / 2.;\n  float x = center.x;\n  x = mix(focusHalfWidth, x, step(0., x - focusHalfWidth));\n  x = mix(1. - focusHalfWidth, x, step(x + focusHalfWidth, 1.));\n  float height = focusWidth * count;\n  float y = min(center.y, 1. - height);\n  vec2 focusCoord = vec2(\n    mix(x - focusHalfWidth, x + focusHalfWidth, mod(coord.x, width) * count),\n    mix(y, y + height, coord.y)\n  );\n\n  vec2 uv = adjustRatio_1_0(mix(focusCoord, defaultCoord, step(focusCount, 0.)), videoResolution, resolution);\n\n  vec4 videoColor = texture2D(videoTexture, uv);\n  videoColor = vec4(videoColor.rgb * 1.8, videoColor.a);\n\n  gl_FragColor = mix(\n    videoColor,\n    vec4(0.),\n    (vec4(1.) - step(uv.x, 1.)) + (vec4(1.) - step(0., uv.x))\n  );\n}\n"},t7pz:function(e,t,n){"use strict";n.d(t,"o",function(){return o}),n.d(t,"k",function(){return i}),n.d(t,"l",function(){return r}),n.d(t,"a",function(){return s}),n.d(t,"i",function(){return a}),n.d(t,"g",function(){return c}),n.d(t,"h",function(){return u}),n.d(t,"f",function(){return l}),n.d(t,"d",function(){return f}),n.d(t,"b",function(){return v}),n.d(t,"m",function(){return p}),n.d(t,"c",function(){return m}),n.d(t,"j",function(){return d}),n.d(t,"e",function(){return h}),n.d(t,"n",function(){return x});var o=416,i=256,r=16,s=128,a=2,c=10,u=1,l=3,f=2,v=3,p=["none","binary","rock","toon","water","glitch","ykobGlitch","dot","dotScreen","shake","flash"],m=[{key:"video"},{key:"circle"}],d=0,h=1,x=3},v98b:function(e,t,n){"use strict";var o=n("9hJY"),i=n.n(o);i.a},vphU:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D texture;\nuniform float     time;\nvarying vec2      vUv;\n\nconst float MAX_ITER = 4.;\nconst float INTEN = 0.05;\n\nvoid main(){\n  vec2 p = vUv * 8. - vec2(20.);\n  vec2 i;\n  float t;\n  vec2 bc;\n  float c = 1.;\n\n  vec2 uv = vUv;\n\n  for (float n = 0.; n < MAX_ITER; n++) {\n    t = time * 0.5 * (2. - (3. / (n + 1.)));\n\n    i = p + vec2(\n      cos(t - i.x) + sin(t + i.y),\n      sin(t - i.y) + cos(t + i.x)\n    );\n\n    bc = vec2(\n      (sin(i.x + t) / INTEN),\n      (cos(i.y + t) / INTEN)\n    );\n\n    c += 1.0 / length(p / bc);\n\n    uv += length(bc) * 0.0005;\n  }\n\n  c /= float(MAX_ITER);\n  c = 1.5 - sqrt(c);\n\n  vec4 texColor = vec4(vec3(0.5), 1.);\n\n  texColor.rgb *= (1. / (1.05 - (c + 0.1)));\n\n  vec4 video = texture2D(texture, uv * 0.95);\n\n  gl_FragColor = video * texColor;\n}\n"},whuo:function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform sampler2D videoTexture;\nuniform float     bgColor;\nuniform float     time;\nvarying vec2 vTexCoord;\nvarying vec4 vPosition;\nvarying float vRnd;\n\nconst float PI = 3.1415926;\nconst float PI2 = PI * 2.;\nconst float amplitude = 0.1;\nconst float amplitude2 = amplitude * 2.;\n\nvec3 hsv_1_0(float h, float s, float v) {\n  vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n  return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\n\n\n\nfloat circle(vec2 st) {\n  return 1. - step(1. - amplitude2, length(st));\n}\n\nvoid main(){\n  float rnd = vRnd;\n  float randomTime = time * mix(0.5, 1., rnd);\n\n  vec4 video = texture2D(videoTexture, vTexCoord);\n\n  vec2 pointCoord = gl_PointCoord.st * 2. - 1.;\n  float distortion = (sin(randomTime * 35.) * sin(pointCoord.y + sin(randomTime * 15.)) * 2. - 1.) * 0.05;\n  pointCoord.x += distortion;\n  float particleColor = 1. - step(length(vec2(\n    circle(pointCoord - vec2(0., distortion) * amplitude),\n    circle(pointCoord + vec2(-distortion, distortion) * amplitude)\n  )), 0.);\n\n  float minCurrentColor = mix(0.2, 0.4, bgColor);\n  float maxCurrentColor = mix(0.9, 0.95, bgColor);\n  vec4 currentColor = mix(vec4(minCurrentColor), vec4(maxCurrentColor), video);\n  vec3 rndColor = hsv_1_0(length(vTexCoord) * PI2, 0.4, 1.);\n\n  gl_FragColor = vec4(rndColor, particleColor * 0.9);\n}\n"},wq1n:function(e,t,n){},yFT2:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D prevVelocityTexture;\nuniform sampler2D pictureTexture;\nuniform vec2      resolution;\nconst float speed = 0.00003;\nvoid main(){\n  vec2 coord = gl_FragCoord.st / resolution;\n  vec4 prevVelocity = texture2D(prevVelocityTexture, coord);\n  vec4 picture = texture2D(pictureTexture, coord);\n  float velocityY = mix(speed + prevVelocity.y, 0., picture.w);\n  gl_FragColor = vec4(prevVelocity.x, velocityY, prevVelocity.z, 0.);\n}\n"},ySYr:function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\nuniform vec2      resolution;\nuniform sampler2D texture;\n\nconst float size = 12.0;           // モザイク模様ひとつあたりのサイズ\nconst float halfSize = size * 0.5; // モザイク模様のサイズの半分 (10.0)\n\nvoid main(){\n    // スクリーン座標を均等に分割し範囲を size の領域に限定する（-size / 2 ～ size / 2） @@@\n    // mod: 除算の剰余\n    // 0.0 ~ 19.999... - 10.0 = -10.0 ~ 10.0\n    vec2 p = mod(gl_FragCoord.st, size) - halfSize;\n\n    // ベクトルの長さを測り二値化する @@@\n    // その中心から 9.0 の距離以内だけ色を塗る\n    float len = step(length(p), halfSize - 1.0);\n    // アンチエイリアスする場合の例\n    // smoothstep(最小値, 最大値, 計測値)\n    // 計測値が最小値と最大値に対して相対的な位置 (0.0 ~ 1.0) を返す (clamp 効果もある)\n    // smoothstep(0.0, 10.0, 5.0) === 0.5\n    // エルミート補間\n    // 円の縁でだんだん暗くなるように値を減少させる\n    float edge = 1.0 - smoothstep(halfSize - 2.5, halfSize, length(p));\n    len *= edge;\n\n    // スクリーン座標をサイズで割ってからサイズを掛ける\n    vec2 texCoord = floor(gl_FragCoord.st / size) * size;\n\n    // フレームバッファの描画結果をテクスチャから読み出す\n    vec4 samplerColor = texture2D(texture, texCoord / resolution);\n\n    // テクスチャの色にノイズの値を掛ける\n    gl_FragColor = samplerColor * vec4(vec3(len), 1.0);\n}\n"},zc4q:function(e,t){e.exports="#define GLSLIFY 1\nattribute vec4 data;\nuniform mat4 mvpMatrix;\nuniform vec2 resolution;\nuniform float pointSize;\nuniform sampler2D positionTexture;\nuniform sampler2D velocityTexture;\nuniform float volume;\nuniform float isAudio;\nuniform float time;\nvarying vec2 vTexCoord;\nvarying vec4 vPosition;\nvarying float vRnd;\n\nconst float yDiff = -0.3;\nconst float xAmplitude = 0.4;\nconst float zAmplitude = 2.;\nconst float scaleSpeed = 0.8;\nconst float limitMin = -5.;\nconst float limitMax = 5.;\n\nvoid main(){\n  vec2 texCoord = data.xy;\n  float rnd = data.w;\n  float symmetryRnd = rnd * 2. - 1.;\n\n  vec4 position = texture2D(positionTexture, texCoord);\n  position.x += symmetryRnd * sin(time * rnd * 4.) * xAmplitude;\n  position.y += yDiff + rnd * 0.1;\n  position.z += rnd * zAmplitude;\n  position.w = zAmplitude;\n  vec3 videoPosition = vec3(clamp(position.xyz, limitMin, limitMax));\n\n  vec4 velocity = texture2D(velocityTexture, texCoord);\n\n  vTexCoord = texCoord;\n  vPosition = position;\n  vRnd = rnd;\n  gl_Position = mvpMatrix * vec4(videoPosition, 1.);\n  gl_PointSize = pow(velocity.y * resolution.y * (isAudio == 1. ? volume * 1.5 : 1.), 2.) * scaleSpeed * pointSize;\n}\n"}});